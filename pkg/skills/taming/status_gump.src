//-----------------------------------------------------------------------------use os;//-----------------------------------------------------------------------------include "include/checks/stdchecks";include "include/gumps";include "include/attributes/main";//-----------------------------------------------------------------------------program StatusGump(Params)  var who := Params[1];  var Mob := Params[2];  var Pid := GetObjProperty(who, "#MobStatus_"+Mob.serial);  var Proc := GetProc(Pid);  if(Proc)    CloseGumpEx(who, Pid);    Proc.kill();  endif  SetObjProperty(who, "#MobStatus_"+Mob.serial, GetPid());  var lDelay := 5;  while(IsLoggedIn(who))    if(!IsTamed(Mob) or GetMaster(Mob) != who)      CloseGumpEx(who, GetPid());      return;    endif    BuildStatusGump(Mob);    CloseGumpEx(who, GetPid());    clear_event_queue();    GPacketSend(who);        var ev := wait_for_event(lDelay);    if(ev)      break;    endif    if(Mob.opponent or Mob.warmode)      lDelay := 1;    else      lDelay := 5;    endif  endwhileendprogram//-----------------------------------------------------------------------------function BuildStatusGump(Mob)  GInit(20, 30);    GGumpPic(0, 20, 0x807);  GResPic(7, 0, 0xBB8, 140, 25);  GTextLine(15, 2, 1000, GetName(Mob));  GGumpPic(33, 31, 0x805);  GGumpPic(33, 45, 0x805);  GGumpPic(33, 58, 0x805);  GGumppicTiled(33, 31, CInt(109*(CDbl(GetHp(Mob))/GetMaxHp(Mob))), 11, 0x806);  GGumppicTiled(33, 45, CInt(109*(CDbl(GetMana(Mob))/GetMaxMana(Mob))), 11, 0x806);  GGumppicTiled(33, 58, CInt(109*(CDbl(GetStamina(Mob))/GetMaxStamina(Mob))), 11, 0x806);endfunction//-----------------------------------------------------------------------------