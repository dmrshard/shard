//-----------------------------------------------------------------------------

use uo;

//-----------------------------------------------------------------------------

include ":banking:common";
include "include/gumps";
include "include/cmds/cmds";
include "include/clock";
include "include/start";

include "saver";

//-----------------------------------------------------------------------------

const ACC_CHECK_DELAY        := 14400;

//-----------------------------------------------------------------------------

var accCheckTime;
var MinsSave, SecDelay, AutoSd;

//-----------------------------------------------------------------------------

program Saver(Parms)

  if(!FillGlobCtrl(Parms))
    return 0;
  endif

  SetLogRunCycles(LST_CONTROL);

  SetGlobalProperty( "#:saver:lastsave", ReadGameClock() );
  SetGlobalProperty( "#:saver:globalsave", ReadGameClock() );

  accCheckTime := ReadGameClock();
  var res, sTime, Cfg;

  while (1)

    UnloadConfigFile(SAVER_CFG);
    Cfg := ReadConfigFile(SAVER_CFG);
    if(!Cfg)
      LogError("Saver: Nie znaleziono konfiga! "+SAVER_CFG);
      sleep(900);
    else
      MinsSave := GetConfigInt(Cfg["Conf"], "MinsSave");
      SecDelay := CInt(GetConfigInt(Cfg["Conf"], "SecDelay"));
      AutoSd   := CInt(GetConfigInt(Cfg["Conf"], "AutoSdMins"))*60;

      if(!MinsSave)
        LogError("Saver: Nie znaleziono czasu zapisu! "+SAVER_CFG);
        sleep(900);
      elseif(AutoSd)
        CheckAutoShutDown();
      else
        sleep(MinsSave * 60);
      endif
    endif

    if(SecDelay)
      Broadcast("Zapis Stanu Swiata nastapi za "+SecDelay+"s.",FONT_NORMAL,COLOR_GREEN);
      sleep(SecDelay);
    endif

    SendWaitGump();
    sleep(1);

    LogNotice("[Saver] Zapisywanie Stanu Swiata", LOGF_NO_NEED | LOGF_NOTE_INFO | LOGF_FORCE_SYSLOG);
    
    Broadcast( "Zapisywanie Stanu Swiata.",FONT_NORMAL,COLOR_GREEN);
    sTime := PolCore().systime;
    set_critical(1);
    accountcheck();
    res := SaveWorldState();
    set_critical(0);
    sTime := RealTime(PolCore().systime - sTime);

    CloseWaitGump();

    if(res)
      SetGlobalProperty( "#:saver:lastsave", ReadGameClock() );
      SetGlobalProperty( "#:saver:globalsave", ReadGameClock() );
      Broadcast( "Koniec zapisywania.",FONT_NORMAL,COLOR_GREEN);
      LogNotice("[Saver] Czas zapisywania: "+sTime,LOGF_NO_NEED | LOGF_ALERT_GMS | LOGF_FORCE_ALERT | LOGF_NOTE_INFO | LOGF_FORCE_SYSLOG);
    else
      LogError( "[Saver] Nie mozna bylo zapisac stanu swiata!: "+res,LOGF_ALERT_GMS | LOGF_FORCE_ALERT | LOGF_SCRIPTS);
    endif

    if(AutoSd)
      AlertGMs("Czas do Auto ShutDown (co "+ShortRealTime(AutoSd)+"): "+RealTime(AutoSd - PolCore().uptime), FONT_NORMAL, COLOR_YELLOW);
    endif

  endwhile

endprogram

//-----------------------------------------------------------------------------

function accountCheck()

  if(accCheckTime + ACC_CHECK_DELAY > ReadGameClock())
    return;
  endif

  accCheckTime := ReadGameClock();

  var nr  := 0;
  var AllAccs := ListAccounts();
  var createTime, chr, lastTime, i;

  foreach acct in AllAccs
    acct := FindAccount(acct);

    if(acct)

      lastTime := acct.GetProp("LastLogin");
      createTime := CInt(acct.GetProp(PROP_CREATE_TIME));

      if(!lasttime)

        acct.setprop("LastLogin", accCheckTime);

      elseif(IsAccountFrozen(acct))

        if((accCheckTime - lasttime) > ACC_TBANEXPIRE and (acct.banned or !acct.enabled))
          acct.unban();
          acct.enable();
        endif

      elseif((createTime and ((accCheckTime - createTime) < ACC_NODEL_TIME)) or (acct.banned and acct.GetProp("BanTime") == -1))
      // jesli nie ma createTime - b. stare konto, przed przypisywaniem propa CREATE_TIME
      // jesli ma, to tylko sprawdzaj te, ktore sa niewystarczajaco stare

        if((accCheckTime - lastTime) > ACC_DELETE_TIME)

          lastTime := 0;

          if(!acct.banned)
            for(i:=1; i<=5; i+=1)
              chr := acct.GetCharacter(i);
              if(chr and chr.cmdlevel)
                lastTime := 1;
                break;
              endif
            endfor
          endif

          if(!lastTime)
            if(DeleteAccount(acct))
              nr := nr + 1;
            endif
          endif

        elseif((accCheckTime - lastTime) > ACC_ACTIVE_TIME)

          lastTime := 0;

          for(i:=1; i<=5; i+=1)
            if(acct.GetCharacter(i))
              lastTime := 1;
              break;
            endif
          endfor

          if(!lastTime)
            if(DeleteAccount(acct))
              nr := nr + 1;
            endif
          endif

        endif
      endif
    endif
  endforeach

  if(nr)
    AlertAdmins(nr + " kont zostalo skasowanych za nieaktywnosc.",FONT_NORMAL,COLOR_BLUE);
  endif

endfunction

//-----------------------------------------------------------------------------

function CheckAutoShutDown()

  var rgc := ReadGameClock() + MinsSave*60;

  while(rgc > ReadGameClock())

    if(AutoSd)
      if(PolCore().uptime > AutoSd)
        if(!AutoShutDown())
          AutoSd := 0;
        endif
      endif
    endif

    sleep(60);

  endwhile

endfunction

//-----------------------------------------------------------------------------

function AutoShutDown()

  if(GetGlobalProperty("#AutoShutDown") == 1)
    return 1;
  endif

  SetGlobalProperty("#AutoShutDown", ReadGameClock());
  var i;

  for(i:=5;i>=1;i:=i-1)
    LogNotice("[Saver] AutoShutDown za "+i+" min.", LOGF_NOTE_INFO);
    BroadCast("Apokalipsa nastapi za "+GetTimeDesc(i)+".",FONT_NORMAL,COLOR_ORANGE);
    sleep(60);

    if(!GetGlobalProperty("#AutoShutDown"))
      LogNotice("[Saver] AutoShutDown przerwany.", LOGF_NOTE_INFO);
      AlertGMs("Ciche zatrzymanie apokalipsy.",FONT_NORMAL,COLOR_BLUE);
      return 0;
    endif
  endfor

  LogNotice("[Saver] Zapisywanie...", LOGF_NOTE_INFO);
  BroadCast("Zapisywanie Stanu Swiata.",FONT_NORMAL,COLOR_BLUE);
  sleep(1);
  SaveWorldState();

  BroadCast("Swiat ogarnia zapomnienie!", FONT_NORMAL, COLOR_RED);
  LogNotice("[Saver] AutoShutDown now!", LOGF_NOTE_INFO);
  SetServerStatus(SERV_ST_DOWN);

  Sleepms(300);

  foreach Player in EnumerateOnlineCharacters()
    InstantDisconnect(Player);
    Sleepms(20);
  endforeach

  Sleepms(700);

  ShutDown();
  return 1;

endfunction

//-----------------------------------------------------------------------------

function GetTimeDesc(Time)

  case(CInt(Time))
    0: return "chwile";
    1: return "minute";
    2:
    3:
    4: return CStr(Time)+" minuty";
    default: return CStr(CInt(Time))+" minut";
  endcase

endfunction

//-----------------------------------------------------------------------------
