//-----------------------------------------------------------------------------
// Created: 2011-04-21
// Modified: 2011-04-21
//-----------------------------------------------------------------------------

include "include/clock";
include "include/gumpboxes";
include "include/gump_utils";
include "include/packets";
include "include/std";
include "include/move";
include "include/cmds/cancmd";
include "include/effects";
include "include/finding";
include "include/objects/location";
include "include/coords";

include ":itemsets:sets";
include ":itemsets:sets_ctrl";
include ":itemsets:gmp_defs";

//-----------------------------------------------------------------------------

const ISSM_SELF    := 1;
const ISSM_FOREIGN := 2;

//-----------------------------------------------------------------------------

program ItemSetsCmd(who, text)

  SetLogRunCycles(LST_CMD);

  text := SplitWords(text);

  case(text[1])

    "list":      CmdListForeignSets(who, text[2]);
                 return;

    "add":       AddContainerSet(who, text[2]);
                 return;
                 
    "addloc":    AddLocationSet(who, text[2]);
                 return;

    "c":         CmdCreateItemFromSet(who, text[2], 0, CISF_LOC);
                 return;
                 
    "t":         CmdCreateItemFromSet(who, text[2], 0, CISF_CONTAINER);
                 return;
    
    "b":         CmdCreateItemFromSet(who, text[2], who.backpack, CISF_CONTAINER);
                 return;
    
    "q":         if(IsQuestMaster(who))
                   CmdCreateItemFromSet(who, text[2], who.backpack, CISF_CONTAINER | CISF_PLAYER_ITEMS);
                 else
                   SendSysMessage(who, "Tylko QM moze tworzyc przedmoty oznaczone jako questowe.", FONT_NORMAL, COLOR_RED);
                 endif
                 return;
                 
    "cq":        if(IsQuestMaster(who))
                   CmdCreateItemFromSet(who, text[2], who.backpack, CISF_CONTAINER | CISF_QUEST_ITEMS);
                 else
                   SendSysMessage(who, "Tylko QM moze tworzyc przedmoty oznaczone jako questowe.", FONT_NORMAL, COLOR_RED);
                 endif
                 return;

    "?":         SendSysMessage(who, ".is [add/addloc/list/c/b/t/q/cq]", FONT_NORMAL, COLOR_RED);
                 return;

  endcase

  var Sets;
  var SelSet;

  while(IsLoggedIn(who))

    Sets := GetPersonSets(who);
    SelSet := SelectItemSet(who, Sets, ISSM_SELF);

    if(SelSet == 0)
      break;
    elseif(!SelSet)
      continue;
    endif

    ShowItemDefinitionDetails(who, Sets[SelSet].Name, Sets[SelSet].Items);

  endwhile

endprogram

//-----------------------------------------------------------------------------

function CmdCreateItemFromSet(who, Name, Dest := 0, Flags := 0)

  if(!Name)
    SendSysMessage(who, "Nie podales nazwy seta!", FONT_NORMAL, COLOR_RED);
    return;
  endif

  var Sets := GetPersonSets(who);

  if(!Sets.exists(Name))
    SendSysMessage(who, "Set o nazwie '"+Name+"' nie istnieje!", FONT_NORMAL, COLOR_RED);
    return;
  endif

  CreateItemFromSet(who, Sets[Name], Dest, Flags);

endfunction

//-----------------------------------------------------------------------------

function CmdListForeignSets(who, Name)

  var Targ := 0;

  if(CInt(Name))
    Targ := FindPlayerBySerial(CInt(Name));
    if(!Targ)
      SendSysMessage(who,"Nie znaleziono seriala: "+Name,FONT_NORMAL,COLOR_RED);
      return;
    endif
  elseif(Name)
    Targ := FindCharacterByName(CStr(Name));
    if(!Targ)
      SendSysMessage(who,"Nie znaleziono osoby: "+Name,FONT_NORMAL,COLOR_RED);
      return;
    endif
  else
    Targ := ObjTarget(who);

    if(!Targ)
      SendSysMessage(who, "Anulowano.", FONT_NORMAL, COLOR_RED);
    endif
  endif

  if(!IsStaff(Targ))
    SendSysMessage(who, "Ta osoba nie jest z ekipy.", FONT_NORMAL, COLOR_RED);
    return;
  elseif(who == Targ)
    SendSysMessage(who, "Ta opcja nie sluzy do listowania wlasnych setow.", FONT_NORMAL, COLOR_RED);
    return;
  endif

  var Sets;
  var SelSet;

  while(IsLoggedIn(who))

    Sets := GetPersonSets(Targ);
    SelSet := SelectItemSet(who, Sets, ISSM_FOREIGN);

    if(SelSet == 0)
      break;
    elseif(!SelSet)
      continue;
    endif

    ShowItemDefinitionDetails(who, Sets[SelSet].Name, Sets[SelSet].Items);

  endwhile

endfunction

//-----------------------------------------------------------------------------

function AddContainerSet(who, Name)

  if(!Name)
    SendSysMessage(who, "Nie wpisales nazwy seta.", FONT_NORMAL, COLOR_RED);
    return;
  endif

  var Sets := GetPersonSets(who);

  if(Sets.exists(Name))

    SendSysMessage(who, "Set o nazwie "+Name+" juz istnieje. Nadpisac?", FONT_NORMAL, COLOR_GREEN);

    if(!YesNo(who, "Na pewno?"))
      return;
    endif

  endif

  var Targ := Target(who);

  if(!Targ.isa(POLCLASS_ITEM))
    SendSysMessage(who, "To nie przedmiot.", FONT_NORMAL, COLOR_RED);
    return;
  endif

  var Data := GetItemSetDefinitionFromItem(who, Name, Targ);
  AddPersonSet(who, Name, Data);
  SendSysMessage(who, "Dodano nowy set: "+Name, FONT_NORMAL, COLOR_BLUE);

endfunction

//-----------------------------------------------------------------------------

function AddLocationSet(who, Name)

  if(!Name)
    SendSysMessage(who, "Nie wpisales nazwy seta.", FONT_NORMAL, COLOR_RED);
    return;
  endif

  var Sets := GetPersonSets(who);

  if(Sets.exists(Name))

    SendSysMessage(who, "Set o nazwie "+Name+" juz istnieje. Nadpisac?", FONT_NORMAL, COLOR_GREEN);

    if(!YesNo(who, "Na pewno?"))
      return;
    endif

  endif

  var nwLoc, seLoc, midLoc;

  SendSysMessage(who, "Stan w rogu NW.", FONT_NORMAL, COLOR_WHITE);

  if(!YesNo(who, "Rog NW?"))
    return;
  endif

  nwLoc := GetLocStruct(who);
  SendSysMessage(who, "NW: "+nwLoc.x+","+nwLoc.y+","+nwLoc.z+" "+nwLoc.realm, FONT_NORMAL, COLOR_GREEN);
  
  SendSysMessage(who, "Stan w rogu SE.", FONT_NORMAL, COLOR_WHITE);

  if(!YesNo(who, "Rog SE?"))
    return;
  endif

  seLoc := GetLocStruct(who);
  SendSysMessage(who, "SE: "+seLoc.x+","+seLoc.y+","+seLoc.z+" "+seLoc.realm, FONT_NORMAL, COLOR_GREEN);

  SendSysMessage(who, "Stan na srodku (podczas tworzenia set stworzy sie we wskazanek lokacji jakby to byl srodek).", FONT_NORMAL, COLOR_WHITE);

  if(!YesNo(who, "Srodek?"))
    return;
  endif

  midLoc := GetLocStruct(who);
  SendSysMessage(who, "Mid: "+midLoc.x+","+midLoc.y+","+midLoc.z+" "+midLoc.realm, FONT_NORMAL, COLOR_GREEN);

  var Data := GetItemSetDefinitionFromLoc(who, Name, nwLoc, seLoc, midLoc);

  if(Data)
    AddPersonSet(who, Name, Data);
    SendSysMessage(who, "Dodano nowy set: "+Name, FONT_NORMAL, COLOR_BLUE);
  else
    SendSysMessage(who, "Blad: "+Data.errortext, FONT_NORMAL, COLOR_RED);
  endif

endfunction

//-----------------------------------------------------------------------------

function SelectItemSet(who, Sets, Mode)

  BQGInit("Sety przedmiotow: "+Sets.size(), 650, 500, 0, 1);
  GAddPageData(615,18,2650,2651,615,467,2648,2647);

  GTextLine(30,  40, 999, "Wybierz");
  GTextLine(100, 40, 999, "Nazwa");
  GTextLine(200, 40, 999, "Dodal");
  GTextLine(300, 40, 999, "Czas");
  GTextLine(440, 40, 999, "Przedmiotow");
  GMultiPage();

  var i := 1;

  foreach Set in Sets

    GCheckNextPage(20);
    GTextLine(25,  60+GNPCount()*20, 560, Set.type);
    GButton(70, 63+GNPCount()*20, 2117, 2118, i);
    GTextLine(100,60+GNPCount()*20, 550, Set.Name);
    GTextLine(200,60+GNPCount()*20, 550, Set.Creator);
    GTextLine(300,60+GNPCount()*20, 1321, CUnixTime(Set.addTime));
    GTextLine(440,60+GNPCount()*20, COLOR_YELLOW, Set.Count);

    GButton(510, 63+GNPCount()*20, 2117, 2118, 10000+i);
    GTextLine(527,60+GNPCount()*20, 990, "Cr");

    if(Mode == ISSM_SELF)
      GButton(550, 63+GNPCount()*20, 2117, 2118, 20000+i);
      GTextLine(567,60+GNPCount()*20, 990, "Rm");
    elseif(Mode == ISSM_FOREIGN)
      GButton(550, 63+GNPCount()*20, 2117, 2118, 30000+i);
      GTextLine(567,60+GNPCount()*20, 990, "Cp");
    endif

    i := i + 1;

  endforeach

  var Res := GSend(who);
  var Keys := Sets.keys();

  if(Res.butid > 30000)
    CmdCopyItemSet(who, Keys[Res.butid-30000], Sets[Keys[Res.butid-30000]]);
    return error;
  elseif(Res.butid > 20000)
    CmdRemoveItemSet(who, Keys[Res.butid-20000]);
    return error;
  elseif(Res.butid > 10000)
    CreateItemFromSet(who, Sets[Keys[Res.butid-10000]], who.backpack);
  elseif(Res.butid)
    return Keys[Res.butid];
  endif

  return 0;

endfunction

//-----------------------------------------------------------------------------

function CmdRemoveItemSet(who, Name)

  SendSysMessage(who, "Chcesz usunac set o nazwie "+Name+"?", FONT_NORMAL, COLOR_GREEN);

  if(!YesNo(who, "Na pewno?"))
    return;
  endif

  if(!RemoveItemSet(who, Name))
    SendSysMessage(who, "Set "+Name+" nie istnieje.", FONT_NORMAL, COLOR_RED);
  else
    SendSysMessage(who, "Usunieto set "+Name+".", FONT_NORMAL, COLOR_GREEN);
  endif

endfunction

//-----------------------------------------------------------------------------

function CmdCopyItemSet(who, Name, Set)

  var Sets := GetPersonSets(who);

  if(Sets.exists(Name))

    SendSysMessage(who, "Set o nazwie: "+Name+" juz istnieje w Twojej bazie. Czy chcesz go ZAMIENIC?", FONT_NORMAL, COLOR_GREEN);

    if(!YesNo(who, "Na pewno?"))
      return;
    endif

  endif

  AddPersonSet(who, Name, Set);

  SendSysMessage(who, "Skopiowano set o nazwie '"+Name+"'.", FONT_NORMAL, COLOR_BLUE);

endfunction

//-----------------------------------------------------------------------------
