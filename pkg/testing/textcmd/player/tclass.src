//-----------------------------------------------------------------------------

use uo;

//-----------------------------------------------------------------------------

include "include/gumps";
include "include/gumpboxes";
include "include/gump_utils";
include "include/attributes/skills";
include "include/attributes/main";
include "include/loots";
include "include/reputation/murderer";
include "include/objects/location";
include ":character:common";
include ":wearwolf:wearwolf";
include ":vampire:vampire";

include ":character:creation_gumps";
include ":character:creation_process";
include ":character:race_validation";

//-----------------------------------------------------------------------------

const TEST_CLASSES_CFG := ":testing:classes";

//-----------------------------------------------------------------------------

program SelectClass(who)

  var vampire  :=0;
  var wearwolf :=0;

  var Data := DefineChooseData();

  var Class := SelectClassGump(who, Data);

  if(Class == -1)
    SendSysMessage(who, "Anulowano.", FONT_NORMAL, COLOR_RED);
    return;
  endif
  
  var Gender := SelectGenderGump(who);
  
  if(Gender == -1)
    SendSysMessage(who, "Anulowano.", FONT_NORMAL, COLOR_RED);
    return;
  endif

  Data.gender := Gender;

  SetDataClass(Data, Class, who.acct);

  var Race := SelectRaceGump(who, Data);

  if(Race == -1)
    SendSysMessage(who, "Anulowano.", FONT_NORMAL, COLOR_RED);
    return;
  endif

  SetDataRace(Data, Race);

  var SubClass := IntelligentGump(who, "Wybierz podklase", GetSubclassByClassName(Class));
  
  if(!SubClass)
    SendSysMessage(who, "Anulowano.", FONT_NORMAL, COLOR_RED);
    return;
  endif

  var fightingSkill := IntelligentGump(who,"Wybierz bojowke",GetFightingSkills());

  if(!fightingSkill)
    SendSysMessage(who, "Anulowano.", FONT_NORMAL, COLOR_RED);
    return;
  endif
  
  var Skills := GetSkillsBySubclassName(SubClass);

  Data.Skills := dictionary;
  Data.Skills[fightingSkill] := 100;
  
  EraseWearWolf(who);
  EraseVampire(who);

  foreach AttrId in Skills
    Data.Skills[GetSkillIdByAttributeId(AttrId)] := 100;
    if (AttrId == "Wearwolf")
       wearwolf :=1;
    endif
    if (AttrId == "Vampire")
       vampire := 1;
    endif
  endforeach

  case(Class)
    CLASS_WARRIOR: Data.Stats := array(90,90,50); 
    CLASS_MAGE:    Data.Stats := array(80,50,80); 
    CLASS_ARCHER:  Data.Stats := array(90,90,10); 
  endcase

  SetBitOff(Data.Flags, CRF_NAME);
  SetBitOn(Data.Flags, CRF_NO_EQUIP);

  ProcessCreationData(who, Data);

  if( vampire == 1 )
    SetVampire(who);
  elseif( wearwolf ==1 )
    SetWearWolf(who);
  endif

endprogram

//-----------------------------------------------------------------------------
//Inteligentne rysowanie gumpa
function IntelligentGump(player,title,argList)

  var index := 50;
  var gumpHeight := argList.Size();

  GInit(200,200); //lokacapolozenie gumpa
  GResPic(0,0,3600,200,100+30 * gumpHeight);
  GTextLine(40,20,510,title);
  var i:=0;

  foreach element in (argList)
    i:=i+1;
    var ObjList;  
    ObjList := array;
    GButton(20,index,2714,2715,_element_Iter);
    GTextLine(40,index,590,element);
    index := index +20;
  endforeach
 
  return GSend(player)[0];
endfunction


//-----------------------------------------------------------------------------
//Czytanie pliku cfg z subklasami, pozniej mozna dodac drugi arguemnt zeby nie mnozyc ilosci funkcji
function GetSubclassByClassName(ClassName)

  var cfgClasses := ReadConfigFile(TEST_CLASSES_CFG);
  var IDs := GetConfigStringArray(cfgClasses[ClassName], "Subclass");
  var SubclassList := dictionary;

  foreach SubID in IDs
    SubclassList[SubID] := GetConfigString(cfgClasses[SubID], "Name");
  endforeach

  return SubclassList;

endfunction


//-----------------------------------------------------------------------------
//Czytanie pliku cfg skille dla subklass
function GetSkillsBySubclassName(SubclassName)

  var cfgSubclasses := ReadConfigFile(TEST_CLASSES_CFG);
  var SkillsList := GetConfigStringArray(cfgSubclasses[SubclassName], "Skill");
  return SkillsList;

endfunction

//-----------------------------------------------------------------------------
//Czytanie pliku cfg bojówka
function GetFightingSkills()
    
  var cfgFight:= ReadConfigFile(TEST_CLASSES_CFG);
  var fightList := dictionary;
  var list :=  GetConfigStringArray(cfgFight["Fighting"], "Skill");
  
  foreach skill in list
    fightList[GetSkillIdByAttributeId(skill)]  := skill;
  endforeach
  
  return fightList;

endfunction

//-----------------------------------------------------------------------------
