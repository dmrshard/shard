//-----------------------------------------------------------------------------
// Modified: 2005-05-03
//-----------------------------------------------------------------------------

use boat;

//-----------------------------------------------------------------------------

include "include/cmds/propgump";
include "include/cmds/misc";
include "include/cmds/cmds";
include "include/std";
include "include/clock";
include "include/cmds/mobinfo";
include "include/gumpboxes";
include "include/log";
include "include/effects";
include ":banking:common";
include "include/attributes/npcs_cag";
include "include/escrow";
include "include/player/nutrition";
include "include/mount";
include "include/skills/skillwin";
include "include/reputation/penalty";
include "include/reputation/murderer";
include "include/player/basic";
include "include/player/target";
include "include/player/hooks";
include "include/player/misc";
include "include/faith";

include "include/mobile/age";

include ":housing:housing";
include ":mail:mail";
include ":character:race_validation";
include ":toplist:toplist";
include ":character:creation_gumps";
include ":crafting:common";
include ":crafting:recep_gumps";
include ":crafting:receptures";
include ":traits:gumps";

include "../../testing"; // nie uzywamy :testing:, bo pakiet moze byc wylaczony.

//-----------------------------------------------------------------------------

var finished              := 0;
var keeprun               := 1;
var Whom                  := 0;
var WhomAcc               := 0;
var SkInGump              := array;

//-----------------------------------------------------------------------------

program TextCmdInfo(who,text)

  SetLogRunCycles(LST_CMD);

  var spText := SplitWords(text);

  case(spText[1])
    "setmurd":        var Trg := Target(who);

                      if(Trg == who)
                        SetMurderer(Trg);
                        var longcount  := CInt(spText[2]);
                        ResetMurderLongTime(Trg, longcount);
                        SendSysMessage(who,"Osoba: "+Trg.name+" MurdCnt: "+longcount,FONT_NORMAL,COLOR_GREEN);
                      elseif(Trg.isa(POLCLASS_NPC) and IsTamed(Trg) and GetMaster(Trg) == who)
                        Trg.SetMurderer(1);
                        if(Trg.murderer)
                          SendSysMessage(who, "Npc: "+Trg.name+" ustawiono murda.", FONT_NORMAL, COLOR_GREEN);
                        else
                          SendSysMessage(who, "Npc: "+Trg.name+" nie udalo sie ustawic murda.", FONT_NORMAL, COLOR_RED);
                        endif
                      else
                        SendSysMessage(who,"Anulowano.",FONT_NORMAL,COLOR_RED);
                      endif

    "eramurd":        var Trg := Target(who);
    
                      if(Trg == who or (Trg.isa(POLCLASS_NPC) and IsTamed(Trg) and GetMaster(Trg) == who) )
                        EraseMurderer(Trg);

                        if(!Trg.murderer)
                          SendSysMessage(who,"Osoba: "+Trg.name+" wyczyszczony murd.",FONT_NORMAL,COLOR_GREEN);
                        else
                          SendSysMessage(who,"Osoba: "+Trg.name+" nie udalo sie wyczyscic murda.",FONT_NORMAL,COLOR_RED);
                        endif
                      else
                        SendSysMessage(who,"Anulowano.",FONT_NORMAL,COLOR_RED);
                      endif

    "eracrim":        var Trg := Target(who);
    
                      if(Trg == who or (Trg.isa(POLCLASS_NPC) and IsTamed(Trg) and GetMaster(Trg) == who) )
                        SetCriminal(Trg, 0);

                        if(!Trg.criminal)
                          SendSysMessage(who,"Osoba: "+Trg.name+" wyczyszczony krim.",FONT_NORMAL,COLOR_GREEN);
                        else
                          SendSysMessage(who,"Osoba: "+Trg.name+" nie udalo sie wyczyscic krima.",FONT_NORMAL,COLOR_RED);
                        endif
                      else
                        SendSysMessage(who,"Anulowano.",FONT_NORMAL,COLOR_RED);
                      endif



  endcase

  if(text == "tame")
    SendSysMessage(who,"Wybierz NPCa.",FONT_NORMAL,COLOR_GREEN);
    whom := ObjTarget(who,TGTOPT_NOCHECK_LOS);

    if(!whom or !whom.isa(POLCLASS_NPC))
      SendSysMessage(who,"Anulowano.", FONT_NORMAL, COLOR_RED);
      return;
    endif
    
    Tame(whom, who);
    SendSysMessage(who, "Stamowal"+ggm(who,3)+" npeca "+whom.name+" dla osoby "+who.name+".", FONT_NORMAL, COLOR_GREEN);
    return;
  endif
  
  if(text == "sk" and CanUseCmd(who, "tinfo sk"))
    SetRawSkillGainWatcher(who);
    return;
  elseif(text == "ske" and CanUseCmd(who, "tinfo sk"))
    if(!EraseRawSkillGainWatcher(who))
      SendSysMessage(who, "Nie sledzisz wzrostu umiejetnosci.", FONT_NORMAL, COLOR_RED);
    endif
    return;
  endif

  if(spText[1] == "s")
    var Cfg := ReadConfigFile(ATTRIBUTES_CFG);
    var SkVal := CDbl(spText[3]);
    var SkText := lower(spText[2]);
    foreach Key in GetCOnfigStringKeys(Cfg)
      var Name := lower(Cfg[Key].Name);
      if(Cfg[Key].ShortName == SkText or Name[SkText])
        SendSysMessage(who, "Umiejetnosc "+Cfg[Key].Name+", poziom: "+skVal+"%", FONT_NORMAL, COLOR_WHITE);
        SetBaseSkillBaseValue(who, Cfg[Key].SkillId, SkVal*10);
        return;
      endif
    endforeach
    SendSysMessage(who, "Nie znaleziono umiejetnosci zawierajacej w nazwie '"+spText[2]+"'", FONT_NORMAL, COLOR_RED);
    return;
  endif

  if(text == "untame")
    SendSysMessage(who,"Wybierz NPCa.",FONT_NORMAL,COLOR_GREEN);
    whom := ObjTarget(who,TGTOPT_NOCHECK_LOS);

    if(!whom or !whom.isa(POLCLASS_NPC))
      SendSysMessage(who,"Anulowano.", FONT_NORMAL, COLOR_RED);
      return;
    endif
    
    UnTame(whom);
    SendSysMessage(who,"Uwolnil"+ggm(who,3)+" npeca "+whom.name+".", FONT_NORMAL, COLOR_RED);
    return;
  endif
  
  if(text == "untame")
    SendSysMessage(who,"Wybierz NPCa.",FONT_NORMAL,COLOR_GREEN);
    whom := ObjTarget(who,TGTOPT_NOCHECK_LOS);

    if(!whom or !whom.isa(POLCLASS_NPC))
      SendSysMessage(who,"Anulowano.", FONT_NORMAL, COLOR_RED);
      return;
    endif
    
    UnTame(whom);
    SendSysMessage(who,"Uwolnil"+ggm(who,3)+" npeca "+whom.name+".", FONT_NORMAL, COLOR_RED);
    return;
  endif
  
  if(text == "bank")
    var bankbox := FindBankBox( who );
    SendOpenSpecialContainer( who, bankbox );
    return;
  endif
  
  SendSysMessage(who,"Wybierz postac.",FONT_NORMAL,COLOR_GREEN);
  whom := ObjTarget(who,TGTOPT_NOCHECK_LOS);

  if(!whom or !whom.isa(POLCLASS_MOBILE))
    SendSysMessage(who,"Anulowano.",FONT_NORMAL,COLOR_RED);
    return;
  endif
  
  if(!CanInteract(who, whom))
    SendSysMessage(who,"Mozesz uzyc tylko na sobie lub swoim npc.",FONT_NORMAL,COLOR_RED);
    return;
  endif

  if(!WhomAcc)
    WhomAcc := whom.acct;
  endif
  BuildMainInfoWindow(whom);
  BuildMainInfoWindowEnd(whom);


  while(keeprun)
    if(!whom or !whom.isa(POLCLASS_MOBILE))
      SendSysMessage(who,"Cel nie istnieje.",FONT_NORMAL,COLOR_RED);
      break;
    endif

    var res := GSend(who);

    if(!whom or !whom.isa(POLCLASS_MOBILE))
      SendSysMessage(who,"Cel nie istnieje.",FONT_NORMAL,COLOR_RED);
      break;
    endif

    if(!res[0])
      keeprun := 0;
    endif

    case(res[0])
      101:       BuildMainInfoWindow(whom);
                 ShowAddInfo(who);
                 continue;

      102:       BuildMainInfoWindow(whom);
                 ShowActions(who);
                 continue;

      9999:      BuildAllSkillsWindow(whom, NO_SKWIN_ARROWS | NO_SKWIN_SKSCRIPT, who);
                 continue;
      9995:      ShowAbilitiesWindow();
                 continue;
      9996:      ChangeChValue(whom,"Name",who);
      19996:     ChangeChValue(whom,"WolfName",who);
      9994:      ChangeChValue(whom,"TPrefix",who);
      9993:      ChangeChValue(whom,"TSuffix",who);
      9992:      ChangeChValue(whom,"TGuild",who);
      9991:      ChangeChValue(whom,"TRace",who);
      9990:      MoveToWrittenLocation(whom,who);
      9989:      MoveToSelectedLocation(whom,who);
      9976:      MoveToHimLocation(whom,who);
      9698:      SetOnlineTimer(who);

      9987:      ModifyStatValue(whom,"ARMod",who);
      9986:      ModifyStatValue(whom,"Color",who);
      9586:      ModifyStatValue(whom,"TrueColor",who);
      9985:      ModifyStatValue(whom,"Graphic",who);


      9114:      ShowAggroTable(who, whom);
                 continue;

      9962:      ShowPlayerMurdPenalty(who);
                 continue;

      9967:      ProcessEraseMurdPenalty();
                 ShowPlayerMurdPenalty(who);

      9852:      if(whom == who)
                   if(!ShowEscrowBoxes(who, whom))
                     SendSysMessage(who, "Nie posiadasz skrzynki powierniczej.", FONT_NORMAL, COLOR_RED);
                   endif
                 endif
                 BuildMainInfoWindow(whom);
                 ShowActions(who);
                 continue;

      9975:      RecalcVitals(whom);

      9950:      SendOpenSpecialContainer(who,whom.backpack);
                 BuildMainInfoWindow(whom);
                 ShowActions(who);
                 continue;
      9951:      if(IsPlayer(whom))
                   SendOpenSpecialContainer(who,FindBankBox(whom));
                 endif
                 BuildMainInfoWindow(whom);
                 ShowActions(who);
                 continue;

      9849:      if(IsPlayer(whom))
                   SendOpenSpecialContainer(who,FindMailBox(whom));
                 endif
                 BuildMainInfoWindow(whom);
                 ShowActions(who);
                 continue;


      9960:      if(IsPlayer(whom))
                   SendOpenSpecialContainer(who,FindStoreBox(whom));
                 endif
                 BuildMainInfoWindow(whom);
                 ShowActions(who);
                 continue;
      9952:      KickPlayer(whom,who);
                 BuildMainInfoWindow(whom);
                 ShowActions(who);
                 continue;
      9953:      SummonPlayer(whom,who);
                 BuildMainInfoWindow(whom);
                 ShowActions(who);
                 continue;
      9954:      FreezePlayer(whom,who);
                 BuildMainInfoWindow(whom);
                 ShowActions(who);
                 continue;
      9959:      ParalyzePlayer(whom,who);
                 BuildMainInfoWindow(whom);
                 ShowActions(who);
                 continue;
      9955:      KillPlayer(whom,who);
                 BuildMainInfoWindow(whom);
                 ShowActions(who);
                 continue;
      9956:      LightKill(whom,who);
                 BuildMainInfoWindow(whom);
                 ShowActions(who);
                 continue;
      9957:      QuiteKillNPC(whom,who);
                 BuildMainInfoWindow(whom);
                 ShowActions(who);
                 continue;
      9958:      RessPlayer(whom,who);
                 BuildMainInfoWindow(whom);
                 ShowActions(who);
                 continue;
      9945:      CmdHidePlayer(whom,who);
                 BuildMainInfoWindow(whom);
                 ShowActions(who);
                 continue;
      9791:      ToggleNpcConceal(whom, who);
                 BuildMainInfoWindow(whom);
                 ShowActions(who);
                 continue;
      9939:      RefreshPerson(whom);
      

      9800:      if(IsHuman(whom))
                   OpenPaperdoll(who,whom);
                 endif
      9799:      ShowMainModWindow(who,whom);
                 continue;
      9798:      ShowSkModWindow(who,whom);
                 continue;

      9697:      ShowEquippedItems();
                 continue;
      9804:      Whom    := GetMaster(Whom);
                 WhomAcc := Whom.acct;
      9805:      Whom    := FindPlayerBySerial(GetPrevTamed(Whom));
                 WhomAcc := Whom.acct;
      9806:      Whom    := FindPlayerBySerial(GetObjProperty(Whom, PROP_PV_SELLER));
                 WhomAcc := Whom.acct;

      9961:      ShowPlayerHouses();
                 continue;

      9942:      ShowGuardCriminals();
                 continue;

      9842:      ShowNpcMember();
                 continue;
      9844:      ShowPlayerHunger();
                 continue;
      9850:      ResetHungerTime();
                 ShowPlayerHunger();
                 continue;
                 
      8001:      BuildRawSkillsGump();
                 continue;
      8000:      ShowTraitsGump(whom, who);

      8002:      BuildRawStatsGump();
                 continue;
      8004:      ProcessMaxSkInfoGump(who);
    endcase

    res := res[0];

    if(res >= 200 and res < 300)
      BlockSkill(whom,(res-200),who);
      sleepms(50);
      BuildAllSkillsWindow(whom, NO_SKWIN_ARROWS | NO_SKWIN_SKSCRIPT, who);
      continue;
    elseif(res >= 400 and res < 500)
      ChangeWhosSkillValue(whom,(res-400),who);
      sleepms(50);
      BuildAllSkillsWindow(whom, NO_SKWIN_ARROWS | NO_SKWIN_SKSCRIPT, who);
      continue;
    elseif(res >= 500 and res < 600)
      ShowCraftReceptures(whom, who, Res-500, SCRF_SHOW_ITEMSCROLL);
      BuildAllSkillsWindow(whom, NO_SKWIN_ARROWS | NO_SKWIN_SKSCRIPT, who);
      continue;
    elseif(res > 900 and res < 920)
      GoToPlayerHouse(who, res-900);
      ShowPlayerHouses();
      continue;
    elseif(res > 1000 and res <= 1000+NPC_ABL_MAXID)
      ChangeNpcAbility(Whom, res-1000, who);
      ShowAbilitiesWindow();
      continue;
    elseif(res > 9800 and res < 9804)
      ChangeWhosStatValue(whom,(res-9800),who);
    elseif(res > 9844 and res <= 9848)
      ChangeNutrValue(whom, (res-9844), who);
      ShowPlayerHunger();
      continue;
    elseif(res > 9900 and res < 9904)
      BlockStat(whom,(res-9900),who);
    elseif(res > 9810 and res < 9814)
      CmdModifyMod(whom,(res-9810),who);
    elseif(res > 9970 and res < 9974)
      ChangeWhosVitalValue(whom,(res-9970),who);
    elseif(res > 9977 and res < 9981)
      ChangeWhosVitalMaxValue(whom,(res-9977),who);
    elseif(res > 9500 and res < 9506)
      Whom := WhomAcc.GetCharacter((res-9500));
    elseif(res > 10000 and res < 10100)
      UndoMod(whom,res - 10000);
      sleepms(50);
      ShowMainModWindow(who,whom);
      continue;
    elseif(res > 10100 and res < 10200)
      DoSelMod(who,res - 10100);
      sleepms(50);
      ShowMainModWindow(who,whom);
      continue;
    elseif(res >= 10200 and res < 10300)
      DoSelSkMod(who,res - 10200);
      sleepms(50);
      ShowSkModWindow(who,whom);
      continue;
    elseif(res >= 10300 and res < 10400)
      UndoSkillMod(whom,res - 10300);
      sleepms(50);
      ShowSkModWindow(who,whom);
      continue;
    elseif(res >= 10400 and res < 10500)
      ModifySkillMod(who,res - 10400);
      sleepms(50);
      ShowSkModWindow(who,whom);
      continue;
    elseif(res > 10000000)
      UnEquipSel(res - 10000000);
    endif

    if(!whom or !whom.isa(POLCLASS_MOBILE))
      SendSysMessage(who,"Cel nie istnieje.",FONT_NORMAL,COLOR_RED);
      break;
    endif

    BuildMainInfoWindow(whom);
    BuildMainInfoWindowEnd(whom);
  endwhile

endprogram

//--------------------------------------------------------------------------------

function BuildMainInfoWindow(whom)

  StandSkLayout(22);
  GPage();
  GButton(340, 24,  1227,1227,9996);

  GTextLine(130,30,610,"Info: "+whom.name);

  if(IsPlayer(whom))
    GTextLine(150,60,615,"Ver: "+whom.clientversion);
  endif

  GTextLine(50,30,610,"Odswiez");
  GButton(30,  34,  2117,2118,9998);

  GButton(44,72 ,2117,2118,9800);

  if(IsTamed(Whom))
    GButton(74,70 ,2117,2118,9804);
    GTextLine(94,67,560,"Wlasciciel");
  elseif(GetObjProperty(Whom,"PrevTamed"))
    GButton(74,70 ,2117,2118,9805);
    GTextLine(94,67,560,"Ost. Wlasciciel");
  elseif(GetObjProperty(Whom, PROP_PV_SELLER))
    GButton(74,70 ,2117,2118,9806);
    GTextLine(94,67,560,"Wlasciciel");
  elseif(CInt(GetObjProperty(Whom,"ForceField")))
    GTextLine(94,67,560,"ForceField "+GetObjProperty(Whom,"ForceField"));
  endif

  GTextLine(70, 87, 550,"Sila");
  GTextLine(260,87, 550,GetBaseStrengthHundrethValue(whom)*0.01);

  GButton(  340,91, 2117,2118,9801);

  if(!whom.isa(POLCLASS_NPC))
    if(IsSetAttrFlag(whom, ATTRIBUTEID_STRENGTH, ATTRF_BLOCKED))
      GButton(320,92 ,2360,2361,9901);
    else
      GButton(320,92 ,2362,2360,9901);
    endif
  endif

  GTextLine(70, 107,550,"Zrecznosc");
  GTextLine(260,107,550,GetBaseDexterityHundrethValue(whom)*0.01);
  GButton(  340,111,2117,2118,9802);

  if(!whom.isa(POLCLASS_NPC))
    if(IsSetAttrFlag(whom, ATTRIBUTEID_DEXTERITY, ATTRF_BLOCKED))
      GButton(320,112,2360,2361,9902);
    else
      GButton(320,112,2362,2360,9902);
    endif
  endif

  GTextLine(70, 127,550,"Inteligencja");
  GTextLine(260,127,550,GetBaseIntelligenceHundrethValue(whom)*0.01);
  GButton(  340,131,2117,2118,9803);

  if(!whom.isa(POLCLASS_NPC))
    if(IsSetAttrFlag(whom, ATTRIBUTEID_INTELLIGENCE, ATTRF_BLOCKED))
      GButton(320,132,2360,2361,9903);
    else
      GButton(320,132,2362,2360,9903);
    endif
  endif

  GTextLine(310, 67,  550,"Eqp");
  GButton(340,72,2117,2118,9697);

  GTextLine(170, 87,  560,"M "+GetStrengthMod(whom));
  GButton(  230, 91,  2117,2118,9811);

  GTextLine(170, 107, 560,"M "+GetDexterityMod(whom));
  GButton(  230, 111, 2117,2118,9812);

  GTextLine(170, 127, 560,"M "+GetIntelligenceMod(whom));
  GButton(  230, 131, 2117,2118,9813);

  GTextLine(70,  154, 560,"H " + GetHp(whom)+"/"+GetMaxHp(whom));
  GButton(  175, 158, 0x837,0x838,9971);
  if(whom.isa(POLCLASS_NPC))
    GButton(  195, 158, 2117,2118,9978);
  endif

  GTextLine(215, 154, 560,"M " + GetMana(whom)+"/"+GetMaxMana(whom));
  GButton(  320, 158, 0x837,0x838,9972);
  if(whom.isa(POLCLASS_NPC))
    GButton(  340, 158, 2117,2118,9979);
  endif

  GTextLine(140, 176, 560,"S " + GetStamina(whom)+"/"+GetMaxStamina(whom));
  GButton(  240, 180, 0x837,0x838,9973);
  if(whom.isa(POLCLASS_NPC))
    GButton(  260, 180, 2117,2118,9980);
  endif

  GTextLine(310, 176, 550,"RV");
  GButton(  340, 180, 2117,2118,9975);

  GTextLine(90,  176, 550,"Ref");
  GButton(  70,  180, 2117,2118,9939);

  GTextLine(70, 200,550,"Prefix");
  GTextLine(130,200,560,whom.title_prefix);
  GButton(  340,204,2117,2118,9994);

  GTextLine(70, 220,550,"Suffix");
  GTextLine(130,220,560,whom.title_suffix);
  GButton(  340,224,2117,2118,9993);

  GTextLine(70, 240,550,"Gildia");
  GTextLine(130,240,560,whom.title_guild);
  GButton(  340,244,2117,2118,9992);

  GTextLine(70, 260,550,"Rasa");
  GTextLine(130,260,560,whom.title_race);
  GButton(  340,264,2117,2118,9991);

  GTextLine(60, 280,550,"Pozycja");
  GTextLine(120,280,560,"x: "+whom.x + " y: " + whom.y + " z: " + whom.z);
  GTextLine(60, 300,550,"Swiat");
  GTextLine(120,300,560,whom.realm);

  GButton(  290,294,2117,2118,9976);
  GButton(  320,294,2117,2118,9990);
  GButton(  340,294,2117,2118,9989);

  GTextLine(200,320,550,"AR Mod");
  GButton(  340,324,2117,2118,9987);

  GTextLine(70, 320,550,"AR");

  if(IsPlayer(whom))
    GTextLine(280,320,560,whom.ar_mod);

    GTextLine(110,320,560,whom.ar);

    GTextLine(70, 410,550,"Konto");
    GTextLine(150,410,560,whom.acctname);

  elseif(whom.isa(POLCLASS_NPC))
    GTextLine(280,320,560,whom.ar_mod - CInt(GetNpcConfig(whom).AR));

    GTextLine(110,320,560,CInt(whom.ar)+"/"+CInt(GetNpcConfig(whom).AR));

    GTextLine(70, 410,550,"Template");
    GTextLine(150,410,560,whom.npctemplate);


  endif

  if(IsPlayer(whom))
    var Time := GetObjProperty(whom, PROP_LASTLOG);

    if(Time)
      if(IsLoggedIn(whom) and whom.concealed < 5)
        GTextLine(70, 430, 1410, "Online");
      elseif(!IsFullyLogout(whom))
        GTextLine(70, 470, 42, "Logout");
      else
        GTextLine(70, 430, 1210, "Offline");
      endif
      GTextLine(150,430, 560, RealTime(ReadGameClock() - Time));
    endif
  endif

  GTextLine(200, 490, 550, "AddInfo");
  GButton(250, 490, 0x15A4, 0x15A5, 101);
  GTextLine(290,490, 550, "Akcje");
  GButton(330, 490, 0x15A4, 0x15A5, 102);

  if(IsReallyTamed(whom))
    GTextLine(50,530,610,"Umiejetnosci");
    GButton(30,534,2117,2118,9999);
    GTextLine(200,530,610,"Zdolnosci");
    GButton(180,534,2117,2118,9995);
  else
    GTextLine(50,530,610,"Umiejetnosci");
    GButton(30,534,2117,2118,9999);
    GTextLine(150,530,610,"Raw");
    GButton(130,534,2117,2118,8002);

    if(IsPlayer(whom))
      GTextLine(210,530,610,"Cechy");
      GButton(190,534,2117,2118,8000);

      GTextLine(270,530,610,"MaxUm");
      GButton(250,534,2117,2118,8003);
    endif
  endif

endfunction

//-----------------------------------------------------------------------------

function BuildMainInfoWindowEnd(whom)

  MakeInfoPageGump(whom, 0);
  MakeInfoPageGump(whom, 1);

endfunction

//-----------------------------------------------------------------------------

function MakeInfoPageGump(whom, IsHex)

  var WhomClr   := whom.color;
  var WhomTClr  := whom.truecolor;
  var WhomGrap  := whom.graphic;
  var WhomTGrap := whom.trueobjtype;
  var WhomSer   := whom.serial;
  var Color     := 560;

  GPage();

  if(IsHex)
    GButtonPage(50, 496, 2103, 2104, 1);
    GTextLine(70, 490, 1000, "Int");

    WhomClr   := hex(whom.color);
    WhomTClr  := hex(whom.truecolor);
    WhomGrap  := hex(whom.graphic);
    WhomTGrap := hex(whom.trueobjtype);
    WhomSer   := hex(whom.serial);
    Color     := 999;
  else
    GButtonPage(50, 496, 2103, 2104, 2);
    GTextLine(70, 490, 1000, "Hex");
  endif

  GTextLine(70, 350,550,"Color");
  GTextLine(150,350,Color,WhomTClr + "/" + WhomClr);
  GButton(  340,354,2117,2118,9986);
  GButton(  320,354,2117,2118,9586);

  GTextLine(70, 370,550,"Grafika");
  GTextLine(150,370,Color,WhomTGrap+ "/" + WhomGrap);
  GButton(  340,374,2117,2118,9985);

  GTextLine(260,370, 1420, __IfElse(whom.gender, "Kobieta", "Mezczyzna"));
  GTextLine(260,390, 1320, GetCharClassConfig(whom).Title);

  GTextLine(70, 390,550,"Serial");
  GTextLine(150,390,Color,WhomSer);

endfunction

//-----------------------------------------------------------------------------

function ShowAddInfo(who, xMove := 390)

  GResPic(xMove+0,  20, 2520,400, 420);
  GResPic(xMove+28, 54, 3600,344, 350);

  if(GetObjProperty(whom, "WolfName"))
    GTextLine(xMove+130,30,610,"Wilkolak: "+GetObjProperty(whom, "WolfName"));
    GButton(xMove+340, 24,  1227,1227,19996);
  endif

  GTextLine(xMove+50,30,610,"Odswiez");
  GButton(xMove+30,  34,  2117,2118,101);

  if(GetObjProperty(whom,"Oszust"))
    GTextLine(xMove+50, 67, 550,"Czas Oszusta");
    GTextLine(xMove+190,67, 560,RealTime((GetObjProperty(whom,"Oszust") + OSZUST_TIME) - Cint(GetObjProperty(whom,PROP_ONLINETIMER))));
  endif

  if(IsPlayer(whom))
    GTextLine(xMove+50, 87, 550,"Czas Online");
    GTextLine(xMove+190,87, 560,RealTime(Cint(GetObjProperty(whom,PROP_ONLINETIMER))));

    if(who == whom)
      GButton(xMove+340,91, 2117,2118,9698);
    endif

    var MurdCount := "",MurdText := "";
    if(GetMurdersCount(whom) > 4)
      MurdCount := CInt(CInt(GetObjProperty(whom, "decaylongcountat")) - GetObjProperty(whom, PROP_ONLINETIMER));
      if(MurdCount > 0)
        MurdCount := RealTime(MurdCount);
        MurdText  := "Czas mordercy";
      endif
    elseif(GetShortMurdersCount(whom) > 0)
      MurdCount := CInt(CInt(GetObjProperty(whom, "decayshortcountat")) - GetObjProperty(whom, PROP_ONLINETIMER));
      if(MurdCount > 0)
        MurdCount := RealTime(MurdCount);
        MurdText  := "Czas mordercy";
      endif
    endif

    if(MurdCount and MurdText)
      GTextLine(xMove+50 ,107,550,MurdText);
      GTextLine(xMove+190,107,560,MurdCount);
    endif

  else
    GTextLine(xMove+50, 67, 550,"Attribute");
    GTextLine(xMove+120,67, 560,ClStr(GetNpcConfig(whom).AttackAttribute));

    var AggroPoints := CInt(GetObjProperty(whom, "#AggroPoints"));
    var AggroLevel  := CInt(GetObjProperty(whom, "#AggroLevel"));
    GTextLine(xMove+50, 87, 550,"Aggro");
    GButton(xMove+95, 90, 2117, 2118, 9114);
    GTextLine(xMove+120,87, 560,AggroPoints+" / "+AggroLevel);

    GTextLine(xMove+220, 87, 550,"Wrog");
    if(whom.opponent)
      GTextLine(xMove+260,87, 560, GetName(whom.opponent));
    else
      GTextLine(xMove+260, 87,1204,"Brak");
    endif
    
    GTextLine(xMove+220, 67, 550,"CAG");

    if(whom.opponent)
      GTextLine(xMove+260, 67,1309, GetCagAmount(whom) + "/" + GetCagMaxAmount(whom) );
    else
      GTextLine(xMove+260, 67,1204, "Brak wroga");
    endif
  endif

  GTextLine(xMove+50, 130,550,"Waga");
  GTextLine(xMove+110,130,560,CInt(whom.weight)+"/" + GetMaxWeight(whom)+" ("+(whom.weight*100/GetMaxWeight(whom))+"%)");

  if(whom.dead)
    GTextLine(xMove+50, 150,1204,"Nie Zyje");
  else
    GTextLine(xMove+50, 150,1419,"Zyje");
  endif

  var DeathTime := GetObjProperty(whom, PROP_DEATH_TIME);

  if(DeathTime)
    GTextLine(xMove+110,150,560, RealTime(ReadGameClock() - DeathTime));
  endif

  GTextLine(xMove+220,130,550,"Krim");
  GTextLine(xMove+280,130,540,CInt(GetObjProperty(whom,"shortmurders")));
  if(whom.criminal)
    GTextLine(xMove+320,130,560,"Tak");
  else
    GTextLine(xMove+320,130,560,"Nie");
  endif

  GTextLine(xMove+220,150,550,"Murd");
  GButton(xMove+260, 153, 2117, 2118, 9962);
  GTextLine(xMove+280,150,540,CInt(GetObjProperty(whom,"longmurders")));
  if(whom.murderer)
    GTextLine(xMove+320,150,560,"Tak");
  else
    GTextLine(xMove+320,150,560,"Nie");
  endif

  GTextLine(xMove+50, 170,550,"Bron");

  var WeapDesc := whom.weapon.desc;
  if(WeapDesc == "nodraw" or !WeapDesc)
    WeapDesc := "Wrestle";
  endif

  GTextCrop(xMove+120,170,200, 20, 560,WeapDesc+"/"+CInt(whom.weapon.objtype));
  
  GTextLine(xMove+50, 200,550,"Czas ist.");
  GTextLine(xMove+140,200,560,RealTime(ReadGameClock() - GetCreatedAt(whom)));

  GTextLine(xMove+50, 220,550,"Wiek");
  GTextLine(xMove+140,220,560,GetAgeDesc(whom, AGEF_REAL));

  if(IsPlayer(whom))
    if(whom.skillcap)
      GTextLine(xMove+50, 240,550,"SkillCap");
      GTextLine(xMove+140,240,560,CountAllSkills(whom)+"/"+whom.skillcap);
    endif

    if(whom.statcap)
      GTextLine(xMove+220,240,550,"StatCap");
      GTextLine(xMove+280,240,560,CountAllStats(whom)+"/"+whom.statcap);
    endif
    
    if(CInt(GetObjProperty(whom,"HairGrow")) and !whom.cmdlevel)
      GTextLine(xMove+50, 280,550,"HairGrow");
      GTextLine(xMove+140,280,560,RealTime(GetObjProperty(whom,"HairGrow") - GetObjProperty(whom,PROP_ONLINETIMER)));
    endif

  elseif(whom.isa(POLCLASS_NPC))

    if(IsSkillSum(whom))
      GTextLine(xMove+50, 240,550,"Przyciagniety:");
      GTextLine(xMove+140,240,560, RealTime(CInt(GetObjProperty(whom, PROP_SK_SUMMONED)) + LIFETIME_SUMMONED - ReadGameClock()));
    elseif(CInt(GetObjProperty(whom, PROP_UNTAMED)))
      GTextLine(xMove+50, 240,550,"UnTamed:");
      GTextLine(xMove+140,240,560, RealTime(CInt(GetObjProperty(whom, PROP_UNTAMED)) + LIFETIME_UNTAMED - ReadGameClock()));
    elseif(GetNpcConfig(whom).MaxLifeTime)
      GTextLine(xMove+50, 240,550,"Czas zycia:");
      GTextLine(xMove+140,240,560, RealTime(GetCreatedAt(whom) + CInt(GetNpcConfig(whom).MaxLifeTime) - ReadGameClock()));
    endif

    var Wealth := GetNpcConfig(whom).wealth;
    if(!Wealth)
      Wealth := "None";
    endif

    var DStart := GetNpcConfig(whom).dstart;
    if(!DStart)
      DStart := 10;
    endif

    GTextLine(xMove+50, 260,550,"Wealth");
    GTextLine(xMove+120,260,560,Wealth);

    GTextLine(xMove+190,260,550,"Anchor");

    var Anchor := GetObjProperty(whom, "Anchor");
    if(Anchor)
      GTextLine(xMove+240,260,560, Anchor[1]+","+Anchor[2]+","+Anchor[3]+"/"+Anchor[4]);
    else
      GTextLine(xMove+240,260,999, "Brak");
    endif

    GTextLine(xMove+50, 280,550,"GuardIgnore");
    GTextLine(xMove+120,280,560,CInt(GetNpcConfig(whom).guardignore));

    GTextLine(xMove+190,280,550,"AI");

    if(whom.process)
      GTextLine(xMove+240,280, 1424, "Proces dziala");
    else
      GTextLine(xMove+240,280, 1209, "Brak procesu!");
    endif

  endif

  var Mount := GetEquipmentByLayer(whom,LAYER_MOUNT);
  if(Mount)
    GTextLine(xMove+50, 260,550,"Mount");
    GTextLine(xMove+140,260,560,Mount.name);
  endif

  GButton(  xMove+325,407,2453,2454,9997);
  BuildMainInfoWindowEnd(whom);

endfunction

//-----------------------------------------------------------------------------

function ShowActions(who,xMove := 390)

  GResPic(xMove+0,  20, 2520,400, 340);
  GResPic(xMove+28, 54, 3600,344, 270);

  GTextLine(xMove+50, 67,550,"Plecak");
  GButton(  xMove+140,71,2117,2118,9950);

  GTextLine(xMove+200, 67,550,"Domy");
  GButton(  xMove+340,71,2117,2118,9961);

  GTextLine(xMove+50, 87,550,"Bank");
  GButton(  xMove+140,91,2117,2118,9951);

  GTextLine(xMove+200, 87,550,"Magazyn");
  GButton(  xMove+340, 91,2117,2118,9960);
  
  if(who == whom)
    GTextLine(xMove+50, 267,550,"Escrow");       
    GButton(  xMove+140, 271,2117,2118,9852);
  endif

  GTextLine(xMove+50, 107,550,"Wykop");
  GButton(  xMove+140,111,2117,2118,9952);

  GTextLine(xMove+200,107,550,"Przyciagnij");
  GButton(  xMove+340,111,2117,2118,9953);

  if(whom.frozen)
    GTextLine(xMove+50, 127,1204,"Odmroz");
  else
    GTextLine(xMove+50, 127,1419,"Zamroz");
  endif

  GButton(  xMove+140,131,2117,2118,9954);

  if(whom.paralyzed)
    GTextLine(xMove+200, 127,1204,"Odparalizuj");
  else
    GTextLine(xMove+200, 127,1419,"Sparalizuj");
  endif

  GButton(  xMove+340,131,2117,2118,9959);

  if(whom.hidden)
    GTextLine(xMove+50, 147,1204,"Odkryj");
  else
    GTextLine(xMove+50, 147,1419,"Schowaj");
  endif

  GButton(  xMove+140,151,2117,2118,9945);

  if(whom.dead)

    GTextLine(xMove+200,147,1204,"Wskrzes");
    GButton(  xMove+340,151,2117,2118,9958);
  endif

  GTextLine(xMove+50,167,550,"Mody");
  GButton(xMove+140,171,2117,2118,9799);

  GTextLine(xMove+200,167,550,"Mody Umow");
  GButton(xMove+340,171,2117,2118,9798);

  if(IsPlayer(whom))

    GTextLine(xMove+200,187,550,"Glod");
    GButton(xMove+340,191,2117,2118,9844);

    GTextLine(xMove+200,207,550,"MailBox");
    GButton(xMove+340,211,2117,2118,9849);

  elseif(whom.isa(POLCLASS_NPC))

    if(IsNpcGuard(whom))
      GTextLine(xMove+50,207,550,"GuardCrims");
      GButton(xMove+140,211,2117,2118,9942);
    elseif(GetObjProperty(whom, PROP_NPC_MEMBER))
      GTextLine(xMove+50,207,550,"Pamiec Npca");
      GButton(xMove+140,211,2117,2118,9842);
    endif

    if(whom.concealed)
      GTextLine(xMove+200, 187,1204,"Ujawnij (Perm)");
    else
      GTextLine(xMove+200, 187,1419,"Ukryj (Perm)");
    endif

    GButton(xMove+340,191,2117,2118,9791);
  endif

  GTextLine(xMove+50, 290,550,"Zabij");
  GButton(  xMove+105,293,2117,2118,9955);

  GTextLine(xMove+140,290,550,"Piorun");
  GButton(  xMove+205,293,2117,2118,9956);

  if(whom.isa(POLCLASS_NPC))
    GTextLine(xMove+240,290,550,"Zabij NPC");
    GButton(  xMove+340,293,2117,2118,9957);
  endif

  BuildMainInfoWindowEnd(whom);

endfunction

//-----------------------------------------------------------------------------

function ChangeWhosSkillValue(who,skillid,bywho)

  var NewValue   := SendTextEntryGump( bywho, "Wprowadz nowa wartosc ",TE_CANCEL_ENABLE);
  if(!NewValue)
    SendSysMessage(bywho,"Anulowano.",FONT_NORMAL,COLOR_RED);
    return;
  endif

  NewValue       := CDbl(NewValue);
  var SkElem     := GetSkillConfigElem(skillid);
  var basevalue  := GetBaseSkillBaseValue(who,skillid) * 0.1;
  if(!SkElem)
    SendSysMessage(bywho,"Nie znaleziono umiejetnosci.",FONT_NORMAL,COLOR_RED);
    return;
  endif

  LogMsg(INFO_LOG,bywho,{who,SkElem.name,basevalue,newvalue});

  SendSysMessage(bywho,"Zmienil"+ggm(bywho,3)+" wartosc "+SkElem.name+" z "+basevalue+"% do "+newvalue+"% osobie "+who.name+".",FONT_NORMAL,COLOR_BLUE);
  NewValue := NewValue * 10;
  SetBaseSkillBaseValue(who,skillid,NewValue);

endfunction

//-----------------------------------------------------------------------------

function ChangeWhosStatValue(who,stat,bywho)

  var basevalue := 0;
  var attributeid;
  case(stat)
    1:       basevalue   := GetBaseStrengthBaseValue(who);     attributeid := ATTRIBUTEID_STRENGTH;
    2:       basevalue   := GetBaseDexterityBaseValue(who);    attributeid := ATTRIBUTEID_DEXTERITY;
    3:       basevalue   := GetBaseIntelligenceBaseValue(who); attributeid := ATTRIBUTEID_INTELLIGENCE;
    default: return;
  endcase

  var NewValue   := SendTextEntryGump( bywho, "Wprowadz nowa wartosc ",TE_CANCEL_ENABLE);
  if(!NewValue)
    SendSysMessage(bywho,"Anulowano.",FONT_NORMAL,COLOR_RED);
    return;
  endif

  NewValue       := CDbl(NewValue);

  LogMsg(INFO_LOG,bywho,{who,attributeid,basevalue*0.1,newvalue});

  var Res;

  case(stat)
    1:       Res := SetBaseStrengthBaseValue(who,Cint(NewValue*10));
    2:       Res := SetBaseDexterityBaseValue(who,Cint(NewValue*10));
    3:       Res := SetBaseIntelligenceBaseValue(who,Cint(NewValue*10));
  endcase

  if(Res)
    SendSysMessage(bywho,"Zmienil"+ggm(bywho,3)+" wartosc "+attributeid+" z "+(basevalue*0.1)+" do "+newvalue+" osobie "+who.name+".",FONT_NORMAL,COLOR_BLUE);
    sleepms(200);
  else
    SendSysMessage(bywho,"Nie udalo sie zmienic wartosci "+attributeid+" z "+(basevalue*0.1)+" do "+newvalue+" osobie "+who.name+".",FONT_NORMAL,COLOR_RED);
  endif

endfunction

//-----------------------------------------------------------------------------

function ChangeWhosVitalValue(who,vital,bywho)

  var NewValue   := RequestInput(bywho,bywho.backpack,"");
  if(!NewValue)
    SendSysMessage(bywho,"Anulowano.",FONT_NORMAL,COLOR_RED);
    return;
  endif
  NewValue       := Cint(NewValue);

  case(vital)
    1:       SetHp(who,NewValue);
    2:       SetMana(who,NewValue);
    3:       SetStamina(who,NewValue);
  endcase

endfunction

//-----------------------------------------------------------------------------

function ChangeWhosVitalMaxValue(who,vital,bywho)

  if(!who.isa(POLCLASS_NPC))
    SendSysMessage(who,"Max wartosc mozesz zmieniac tylko npcom.",FONT_NORMAL,COLOR_RED);
    return;
  endif

  var NewValue   := SendTextEntryGump( bywho, "Wprowadz nowa wartosc ",TE_CANCEL_ENABLE);
  NewValue       := Cint(NewValue);

  if(!NewValue)
    SendSysMessage(bywho,"Anulowano.",FONT_NORMAL,COLOR_RED);
    return;
  endif

  case(vital)
    1:       LogMsg(INFO_LOG,bywho,{who,VITALID_LIFE,GetMaxHp(who),newvalue});
             SetMaxHp(who,NewValue);
    2:       LogMsg(INFO_LOG,bywho,{who,VITALID_MANA,GetMaxMana(who),newvalue});
             SetMaxMana(who,NewValue);
    3:       LogMsg(INFO_LOG,bywho,{who,VITALID_STAMINA,GetMaxStamina(who),newvalue});
             SetMaxStamina(who,NewValue);
  endcase

endfunction

//-----------------------------------------------------------------------------

function ChangeChValue(who, Type, bywho)

  var NewValue   := SendTextEntryGump( bywho, "Wprowadz nowa wartosc ",TE_CANCEL_ENABLE);
  if(!NewValue and NewValue != "")
    SendSysMessage(bywho,"Anulowano.",FONT_NORMAL,COLOR_RED);
    return;
  endif

  var OldValue := "";
  var SetValue := "";

  case(Type)
    "Name":      OldValue              := who.name;
                 who.name              := Cstr(NewValue);
                 SetValue              := who.name;

    "WolfName":  OldValue              := GetObjProperty(who, "WolfName");
                 SetObjProperty(who, "WolfName", CStr(NewValue));
                 SetValue              := GetObjProperty(who, "WolfName");

    "TPrefix":   OldValue              := who.title_prefix;
                 who.title_prefix      := Cstr(NewValue);
                 SetValue              := who.title_prefix;

    "TSuffix":   OldValue              := who.title_suffix;
                 who.title_suffix      := Cstr(NewValue);
                 SetValue              := who.title_suffix;

    "TGuild":    OldValue              := who.title_guild;
                 who.title_guild       := Cstr(NewValue);
                 SetValue              := who.title_guild;

    "TRace":     OldValue              := who.title_race;
                 who.title_race        := Cstr(NewValue);
                 SetValue              := who.title_race;

    "Script":    SendSysMessage(bywho,"Upewnij sie czy skrypt "+Cstr(NewValue)+" istnieje.",FONT_NORMAL,COLOR_GREEN);
                 if(YesNo(bywho,"Na pewno?"))
                   OldValue              := who.script;
                   who.script            := Cstr(NewValue);
                   SetValue              := who.script;
                   RestartScript(who);
                 else
                   return;
                 endif
  endcase

  if(SetValue == NewValue)
    LogMsg(INFO_LOG,bywho,{who, Type, OldValue, NewValue});
    SendSysMessage(bywho,Type+": "+who.name+" ["+OldValue+" > "+NewValue+"]",FONT_NORMAL,COLOR_GREEN);
  else
    SendSysMessage(bywho,"Blad: "+Type+": "+who.name+" ["+OldValue+" > "+NewValue+"]",FONT_NORMAL,COLOR_RED);
  endif

endfunction

//-----------------------------------------------------------------------------

function CmdModifyMod(whom,stat,bywho)

  var NewValue := SendTextEntryGump( bywho, "Wprowadz nowa wartosc ",TE_CANCEL_ENABLE);
  if(!NewValue)
    SendSysMessage(bywho,"Anulowano.",FONT_NORMAL,COLOR_RED);
    return;
  endif

  NewValue := Cint(NewValue);

  Case(stat)
   1:  SetStrengthMod(whom,Newvalue);
   2:  SetDexterityMod(whom,Newvalue);
   3:  SetIntelligenceMod(whom,Newvalue);
  endcase

  return NewValue;

endfunction

//-----------------------------------------------------------------------------

function ModifyStatValue(who,type,bywho)

  var basevalue := 0;
  var SetValue  := 0;

  var NewValue := SendTextEntryGump( bywho, "Wprowadz nowa wartosc ",TE_CANCEL_ENABLE);
  if(!NewValue)
    SendSysMessage(bywho,"Anulowano.",FONT_NORMAL,COLOR_RED);
    return;
  endif

  NewValue := Cint(NewValue);

  case(type)
    "RunSpeed":   basevalue     := who.run_speed;
                  who.run_speed := newvalue;
                  SetValue      := who.run_speed;

    "ARMod":      basevalue     := who.ar_mod;
                  if(who.isa(POLCLASS_NPC))
                    who.ar_mod    := newvalue + CInt(GetNpcConfig(who).AR);
                    SetValue      := who.ar_mod - CInt(GetNpcConfig(who).AR);
                  else
                    who.ar_mod    := newvalue;
                    SetValue      := who.ar_mod;
                  endif

    "Color":      basevalue     := who.color;
                  if(who.isa(POLCLASS_NPC))
                    SetNpcColor(who, newvalue);
                  else
                    who.color     := newvalue;
                  endif
                  SetValue      := who.color;

    "TrueColor":  basevalue     := who.truecolor;
                  who.truecolor := newvalue;
                  SetValue      := who.truecolor;

    "Graphic":    basevalue     := who.graphic;
                  if(who.isa(POLCLASS_NPC))
                    SetNpcGraphic(who, newvalue);
                  else
                    who.graphic   := newvalue;
                  endif
                  SetValue      := who.graphic;

    default:      return;
  endcase

  if(SetValue == NewValue)
    LogMsg(INFO_LOG,bywho,{who,type,basevalue,NewValue});
    SendSysMessage(bywho,type+": "+who.name+" ["+basevalue+" > "+newvalue+"]",FONT_NORMAL,COLOR_GREEN);
  else
    SendSysMessage(bywho,"Blad "+type+": "+who.name+" ["+basevalue+" > "+newvalue+"]",FONT_NORMAL,COLOR_RED);
  endif

endfunction

//-----------------------------------------------------------------------------

function RefreshPerson(who)

  RecalcVitals(who);
  SetHp(who,GetMaxHp(who));
  SetMana(who,GetMaxMana(who));
  SetStamina(who,GetMaxStamina(who));

endfunction

//-----------------------------------------------------------------------------

function ChooseAccountFromIpString(who,Ip)

  StandMultiSkLayout(25);
  GTextLine(130,30,610,"Konta z ip "+Ip);
  GButton(110, 34, 2117,2118,9977);

  GMultiPage();
  GAddPageData(365,55,2650,2651,365,563,2648,2647);

  var LastIps,IpAccs := {},i := 1;
  foreach Acc in ListAccounts()
    Acc := FindAccount(Acc);
    LastIps := Acc.GetProp("LastIP");
    foreach LastIp in LastIps
      if(MatchIp(Ip, _LastIp_iter))
        GCheckNextPage(25);
        GButton(60,(78+(GNPCount()*20)),2117,2118,i);
        GTextLine(80,(73+(GNPCount()*20)),550, _LastIp_iter);
        GTextLine(200,(73+(GNPCount()*20)),670, Acc.name);
        IpAccs[i] := Acc.name;
        i := i + 1;
        break;
      endif
    endforeach
  endforeach

  SendSysMessage(who,"Znaleziono "+len(IpAccs)+" kont z ip "+Ip+".",FONT_NORMAL,COLOR_GREEN);
  var res := GSend(who)[0];
  if(res)
    return FindAccount(IpAccs[res[0]]);
  endif
  return 0;

endfunction

//-----------------------------------------------------------------------------

function ChooseAccountByProfile(who, Profile)

  StandMultiSkLayout(25);
  GTextLine(130,30,610,"Konta z profilu: "+Profile);
  GButton(110, 34, 2117,2118,9977);

  GMultiPage();
  GAddPageData(365,55,2650,2651,365,563,2648,2647);

  Profile := Lower(Profile);
  var ProfData, pfAccs := {},i := 1;

  foreach Acc in ListAccounts()
    Acc := FindAccount(Acc);
    ProfData := Acc.GetProp("profile");
    if(ProfData)
      if(Lower(ProfData.login)[Profile])
        GCheckNextPage(25);
        GButton(60,(78+(GNPCount()*20)),2117,2118,i);
        GTextLine(80,(73+(GNPCount()*20)),550, ProfData.login);
        GTextLine(250,(73+(GNPCount()*20)),670, Acc.name);
        pfAccs[i] := Acc.name;
        i := i + 1;
      endif
    endif
  endforeach

  if(pfAccs.size())
    SendSysMessage(who,"Znaleziono "+len(pfAccs)+" kont z profilu: "+Profile+".",FONT_NORMAL,COLOR_GREEN);
    var res := GSend(who)[0];
    if(res)
      return FindAccount(pfAccs[res[0]]);
    endif
  else
    SendSysMessage(who,"Nie znaleziono kont z profilu: "+Profile+".",FONT_NORMAL,COLOR_RED);
  endif

  return 0;

endfunction

//-----------------------------------------------------------------------------

function ShowEquippedItems()

  var Item,n := 0;
  var ItemCfg := ReadConfigFile(ITEMS_CFG);

  StandSkLayout(20,25);
  GTextLine(50,30,610,"Ekwipunek: "+whom.name);
  GButton(625,487,2453,2454,9997);

  var i;

  for(i:=1;i<=LAYER_TRADE;i:=i+1)
    Item := GetEquipmentByLayer(whom,i);
    if(item)
      GTextLine(90,(n*20)+70,560,Item.serial);
      GTextLine(180,(n*20)+70,999,Item.objtype);
      GTextLine(230,(n*20)+70,999,hex(Item.objtype));
      GTextLine(290,(n*20)+70,1320,Item.color);
      GTextLine(340,(n*20)+70,1000,ItemCfg[Item.objtype].name);
      GTextLine(440,(n*20)+70,580,Item.desc);
      GButton(60,(n*20)+74,2117,2118,10000000+Item.serial);
      n := n + 1;
    endif
  endfor

endfunction

//-----------------------------------------------------------------------------

function UnEquipSel(ItemSer)

  var Item, i;
  for(i:=1;i<=25;i:=i+1)
    Item := GetEquipmentByLayer(whom,i);
    if(item)
      if(Item.serial == ItemSer)
        MoveItemToContainer(Item,whom.backpack);
      endif
    endif
  endfor

endfunction

//-----------------------------------------------------------------------------

function GetModName(ModId)

  case(ModId)
    MOD_STR:            return "Str";
    MOD_DEX:            return "Dex";
    MOD_INT:            return "Int";
    MOD_LIFE:           return "Life";
    MOD_STAMINA:        return "Stam";
    MOD_MANA:           return "Mana";
    MOD_AR:             return "Ar";
    MOD_GRAPHIC:        return "Grap";
    MOD_COLOR:          return "Color";

    MOD_INCO:           return "Name";
    MOD_TPREFIX:        return "Prefix";
    MOD_TSUFFIX:        return "Suffix";
    MOD_TGUILD:         return "Guild";
    MOD_TRACE:          return "Race";
    MOD_PARA:           return "Paralyze";
    MOD_HGHOSTS:        return "Hear Ghosts";
    MOD_RA:             return "Reactive Armor";
    MOD_LIGHT:          return "Light Lvl";
    MOD_POISON_PROT:    return "Poison Prot";
    MOD_STATUS:         return "Status";
    MOD_FIRERESIST:     return "Fire Res";
    MOD_COLDRESIST:     return "Cold Res";
    MOD_LIGHTRESIST:    return "Light Res";
    MOD_HP_REGEN:       return "Hp Regen";
    MOD_MANA_REGEN:     return "Mana Regen";
    MOD_STAM_REGEN:     return "Stam Regen";
    MOD_CTH:            return "Cth";
    MOD_LOWER_RC:       return "Lower RegsCost";
    MOD_FASTER_CAST:    return "Faster Cast";
    MOD_MANA_COST:      return "Mana Cost";
    MOD_SPELL_DMG:      return "Spell Dmg";
    MOD_POISON_DMG:     return "Poison Dmg";
    MOD_COLD_DMG:       return "Cold Dmg";
    MOD_FIRE_DMG:       return "Fire Dmg";
    MOD_LIGHT_DMG:      return "Light Dmg";
    MOD_MOUNT:          return "Mount";
    MOD_HAIRS:          return "Hairs";
    MOD_PENETRATE:      return "Penetrate";
    MOD_UNTOUCHABLE:    return "UnTouchAble";
    MOD_UNDEAD_SLAY:    return "UndeadSlayer";
    MOD_DAEMON_SLAY:    return "DaemonSlayer";
    MOD_ORDER_SLAY:     return "OrderSlayer";
    MOD_DEFENSE:        return "Defense";
    MOD_MONSTER_AR:     return "Monster Ar";
    MOD_TREE_SUPPORT:   return "TreeSupport";
    MOD_BLOCK_CAST:     return "BlockCast";
    MOD_BLOCK_FIGHT:    return "BlockFight";
    MOD_BLOCK_SELFHEAL: return "BlockSelfHeal";
    MOD_SILVER_AR:      return "Silver Ar";
    MOD_FIRE_BLOOD:     return "Fire Blood";
    MOD_ONHIT_AR:       return "OnHit Ar";
    MOD_LIFE_STOLEN:    return "Life Stolen";
    MOD_MANA_STOLEN:    return "Mana Stolen";
    MOD_MANA_DMG:       return "Mana Dmg";
    MOD_MULTI_SHOT:     return "Multi Shot";
    MOD_EXPLO_DMG:      return "Explo Dmg";
    MOD_RETORT:         return "Riposta";
    MOD_CRIT_HIT:       return "CritHit";
    MOD_STAM_DMG:       return "Stamina Dmg";
    MOD_DISARM:         return "Disarm";
    MOD_STUPOR:         return "Otepienie";
    MOD_2H_DMG:         return "2H Dmg";
    MOD_RUN_SPEED:      return "Run Speed";
    MOD_RED_SPELL:      return "Reduce Spell";
    MOD_CHARM_ANIMAL:   return "Charm Animal";
    MOD_DISMOUNT_RES:   return "Dismount Res";
    MOD_MAGIC_SHIELD:   return "Magic Shield";
    MOD_SLOWDOWN:       return "Slowdown";
  endcase

  return "";

endfunction

//-----------------------------------------------------------------------------

function BuildStatModInfo(who, whom, ModId, StVal, ModVal, Pos)

  GTextLine(50, 67+Pos, 550, GetModName(ModId));
  GTextLine(95, 67+Pos, 560, StVal);
  GTextLine(160,67+Pos, 550, "Mod");
  GTextLine(200,67+Pos, 560, ModVal);

  BuildStdModInfo(who, Whom, ModId, Pos);

endfunction

//-----------------------------------------------------------------------------

function BuildNormalModInfo(who, whom, ModId, Pos, mVal := 0)

  GTextLine(50, 67+Pos, 550, GetModName(ModId));
  GTextLine(160,67+Pos, 550, "Mod");
  if(mVal)
    GTextLine(200,67+Pos, 560, mVal);
  else
    GTextLine(200,67+Pos, 560, CInt(GetModAmount(whom, ModId)));
  endif

  BuildStdModInfo(who, Whom, ModId, Pos);

endfunction

//-----------------------------------------------------------------------------

function BuildTextModInfo(who, whom, ModId, Pos)

  GTextLine(50, 67+Pos, 550, GetModName(ModId));
  GTextLine(110,67+Pos, 560, ClStr(GetModOldAmount(whom, ModId)));

  BuildStdModInfo(who, Whom, ModId, Pos);

endfunction

//-----------------------------------------------------------------------------

function BuildArrayModInfo(who, whom, ModId, Pos)

  var ArrText := "";
  var ModAmt := GetModAmount(whom, ModId);
  var i;

  for(i:=1; i<=ModAmt.size(); i:=i+1)
    if(i > 1)
      ArrText := ArrText+", "+ModAmt[i];
    else
      ArrText := ModAmt[i];
    endif
  endfor

  GTextLine(50, 67+Pos, 550, GetModName(ModId));
  GTextLine(160,67+Pos, 560, ArrText);

  BuildStdModInfo(who, Whom, ModId, Pos);

endfunction

//-----------------------------------------------------------------------------

function BuildStdModInfo(who, whom, ModId, Pos)

  var mClr := 0;

  case(CanMod(whom, ModId))
    0:       mClr := 0;
    1:       mClr := 1;
    default: mClr := -1;
  endcase

  if(mClr == 0)
    GTextLine(310, 67+Pos, 1419, RealTime(GetModLeftTime(whom, ModId)));
  endif

  GGumpPic( 260,72+Pos, 2361 + mClr);

  case(CanMagicMod(whom, ModId))
    0:       mClr := 0;
    1:       mClr := 1;
    default: mClr := -1;
  endcase

  GGumpPic( 280,72+Pos, 2361 + mClr);

  if(CanMagicMod(whom, ModId) and CanMod(whom, ModId))
    if(IsAdmin(who) or whom.cmdlevel)
      GTextLine(360,67+Pos, 550,"Set");
      GButton(  390,71+Pos, 2117,2118,10100 + ModId);
    endif
  elseif(CanMod(whom, ModId) == 0)
    GTextLine(360,67+Pos, 550,"Un");
    GButton(  390,71+Pos, 2117,2118,10000 + ModId);
  endif

endfunction

//-----------------------------------------------------------------------------

function ShowMainModWindow(who, whom)

  StandSkLayout(20, 13);
  GAddPageData(425,55,2650,2651,425,463,2648,2647);
  GPage();

  GButton(  325,487,2453,2454,102);
  GButton( 40, 33, 2117,2118, 9799);
  GTextLine(60, 30, 999, "Odswiez");
  GTextLine(140,30, 610,"Mods: "+Whom.name);

  var hPos := 0;

  foreach ModId in GetAllMods()
    GCheckNextPage(20);
    hPos := GNPCount() * 20;

    case(ModId)
      MOD_STR:          BuildStatModInfo(who, whom, ModId, GetBaseStrengthBaseValue(whom) * 0.1, GetStrengthMod(whom), hPos);
      MOD_DEX:          BuildStatModInfo(who, whom, ModId, GetBaseDexterityBaseValue(whom) * 0.1, GetDexterityMod(whom), hPos);
      MOD_INT:          BuildStatModInfo(who, whom, ModId, GetBaseIntelligenceBaseValue(whom) * 0.1, GetIntelligenceMod(whom), hPos);
      MOD_LIFE:         BuildStatModInfo(who, whom, ModId, GetMaxHp(whom) - GetTempModAmount(whom,MOD_LIFE), GetTempModAmount(whom,MOD_LIFE), hPos);
      MOD_STAMINA:      BuildStatModInfo(who, whom, ModId, GetMaxStamina(whom) - GetTempModAmount(whom,MOD_STAMINA), GetTempModAmount(whom, MOD_STAMINA), hPos);
      MOD_MANA:         BuildStatModInfo(who, whom, ModId, GetMaxMana(whom) - GetTempModAmount(whom,MOD_MANA), GetTempModAmount(whom,MOD_MANA), hPos);
      MOD_AR:           BuildStatModInfo(who, whom, ModId, whom.ar - whom.ar_mod, CInt(GetModAmount(whom,MOD_AR)), hPos);
      MOD_GRAPHIC:      BuildStatModInfo(who, whom, ModId, whom.objtype, whom.graphic, hPos);
      MOD_COLOR:        BuildStatModInfo(who, whom, ModId, whom.truecolor, whom.color, hPos);

      MOD_TPREFIX:
      MOD_TSUFFIX:
      MOD_TGUILD:
      MOD_TRACE:
      MOD_INCO:         BuildTextModInfo(who, whom, ModId, hPos);

      MOD_MOUNT:        BuildNormalModInfo(who, whom, ModId, hPos, GetTempModAmount(whom,MOD_MOUNT)[1]+" "+GetTempModAmount(whom,MOD_MOUNT)[2]);

      MOD_HP_REGEN:
      MOD_MANA_REGEN:
      MOD_STAM_REGEN:
      MOD_LIFE:
      MOD_MANA:
      MOD_STAMINA:
      MOD_FIRERESIST:
      MOD_COLDRESIST:
      MOD_LIGHTRESIST:
      MOD_CTH:
      MOD_PENETRATE:
      MOD_UNDEAD_SLAY:
      MOD_DAEMON_SLAY:
      MOD_ORDER_SLAY:
      MOD_DEFENSE:
      MOD_TREE_SUPPORT:
      MOD_BLOCK_FIGHT:    
      MOD_BLOCK_CAST:     
      MOD_BLOCK_SELFHEAL: 
      MOD_MONSTER_AR:
      MOD_SILVER_AR:
      MOD_FIRE_BLOOD:
      MOD_ONHIT_AR:
      MOD_LOWER_RC:
      MOD_FASTER_CAST:
      MOD_MANA_COST:
      MOD_SPELL_DMG:
      MOD_POISON_DMG:
      MOD_FIRE_DMG:
      MOD_COLD_DMG:
      MOD_LIGHT_DMG:
      MOD_RETORT:
      MOD_RUN_SPEED:
      MOD_CRIT_HIT:
      MOD_STAM_DMG:
      MOD_DISARM:
      MOD_STUPOR:
      MOD_2H_DMG:       BuildNormalModInfo(who, whom, ModId, hPos, GetTempModAmount(whom, ModId));

      MOD_UNTOUCHABLE:
      MOD_MAGIC_SHIELD: BuildArrayModInfo(who, whom, ModId, hPos);

      default:          BuildNormalModInfo(who, whom, ModId, hPos);
    endcase
  endforeach

endfunction

//-----------------------------------------------------------------------------

function DoSelMod(who,Mod)

  var Amt;

  case(Mod)
    MOD_STR:
    MOD_DEX:
    MOD_INT:
    MOD_AR:
    MOD_GRAPHIC:
    MOD_COLOR:
    MOD_RA:
    MOD_TPREFIX:
    MOD_TSUFFIX:
    MOD_TGUILD:
    MOD_TRACE:
    MOD_LIGHT:
    MOD_POISON_PROT:
    MOD_LIFE:
    MOD_MANA:
    MOD_STAMINA:
    MOD_FIRERESIST:
    MOD_COLDRESIST:
    MOD_LIGHTRESIST:
    MOD_INCO:
    MOD_STATUS:
    MOD_HP_REGEN:
    MOD_MANA_REGEN:
    MOD_STAM_REGEN:
    MOD_CTH:
    MOD_POISON_DMG:
    MOD_FIRE_DMG:
    MOD_COLD_DMG:
    MOD_LIGHT_DMG:
    MOD_FIRE_BLOOD:
    MOD_RETORT:
    MOD_CRIT_HIT:       Amt := SendTextEntryGump(who,"Jaka wartosc?",TE_CANCEL_ENABLE);
    MOD_HAIRS:          Amt := {};
                        Amt[1] := SendTextEntryGump(who,"Jaki ObjType wlosow?",TE_CANCEL_ENABLE);
                        if(!CInt(Amt[1]))
                          SendSysMessage(who,"Bledny OT.",FONT_NORMAL,COLOR_RED);
                          return;
                        endif
                        Amt[2] := SendTextEntryGump(who,"Jaki Color wlosow?",TE_CANCEL_ENABLE);
                        if(!Amt[2])
                          SendSysMessage(who,"Nie podal"+ggm(who,3)+" koloru.",FONT_NORMAL,COLOR_RED);
                          return;
                        endif
    default:            Amt    := 1;
  endcase

  if(!Amt and Amt != "")
    SendSysMessage(who,"Nie podal"+ggm(who,3)+" ilosci.",FONT_NORMAL,COLOR_RED);
    return;
  endif

  var Dur := SendTextEntryGump(who,"Jaki czas ? (sec)",TE_CANCEL_ENABLE);

  if(!CInt(Dur))
    SendSysMessage(who,"Nie podal"+ggm(who,3)+" czasu.",FONT_NORMAL,COLOR_RED);
    return;
  endif

  DoMod(whom,Mod,Amt,CInt(Dur));

endfunction

//-----------------------------------------------------------------------------

function ShowSkModWindow(who,whom)

  StandSkLayout(20, 13);
  GButton( 40, 33, 2117,2118, 9798);

  var maxSkId := GetMaxSkillId();

  GButton(  325,487,2453,2454,102);
  GTextLine(60,30, 610,"Mody Umiejetnosci: "+whom.name);
  GAddPageData(425,55,2650,2651,425,463,2648,2647);
  GPage();

  var SkID,SkElem;

  for(SkID:=0;SkID<=maxSkId;SkID:=SkID+1)
    GCheckNextPage(PAGE_COUNT);
    if(IsAdmin(who))
      GButton(  40,Cint(70+ (GNPCount()*20)),2117,2118,10400+SkId);
    endif
    SkElem := GetSkillConfigElem(SkID);
    GTextLine(60, Cint(67+ (GNPCount()*20)),550,SkElem.name);
    GTextLine(215,Cint(67+ (GNPCount()*20)),550,GetBaseSkillBaseValue(whom,(SkID))*0.1);
    GTextLine(265,Cint(67+ (GNPCount()*20)),550,GetSkillTemporaryMod(whom,SkID));

    GGumpPic( 365,Cint(70+ (GNPCount()*20)), 2361 + CanSkillMod(whom,SkID));
    GGumpPic( 385,Cint(70+ (GNPCount()*20)), 2361 + CanMagicSkillMod(whom,SkID));

    if(CanMagicSkillMod(whom,SkID) and CanSkillMod(whom,SkID))
      if(IsAdmin(who))
        GButton(  400,Cint(70+ (GNPCount()*20)),2117,2118,10200+SkID);
      endif
    elseif(CanSkillMod(whom,SkID) == 0)
      GButton(  400,Cint(70+ (GNPCount()*20)),2117,2118,10300+SkId);
      GTextLine(310,Cint(67+ (GNPCount()*20)),1419, RealTime((GetSkillModTime(whom, SkID) + GetSkillModDuration(whom, SkID)) - ReadGameClock()));
    endif
  endfor

endfunction

//-----------------------------------------------------------------------------

function DoSelSkMod(who,SkID)

  var Amt := SendTextEntryGump(who,"Jaka wartosc?",TE_CANCEL_ENABLE);

  if(!CInt(Amt))
    SendSysMessage(who,"Nie podal"+ggm(who,3)+" ilosci.",FONT_NORMAL,COLOR_RED);
    return;
  endif

  var Dur := SendTextEntryGump(who,"Jaki czas? (sec)",TE_CANCEL_ENABLE);

  if(!CInt(Dur))
    SendSysMessage(who,"Nie podal"+ggm(who,3)+" czasu.",FONT_NORMAL,COLOR_RED);
    return;
  endif

  DoSkillMod(whom,SkID,CInt(Amt),CInt(Dur));

endfunction

//-----------------------------------------------------------------------------

function ShowNearMobs(who, Range)

  StandMultiSkLayout(20,10);
  GAddPageData(365,55,2650,2651,365,463,2648,2647);
  var Mobs := {};

  i := 1;

  if(!Range)
    Range := 3;
  elseif(Range > 50 and !IsAdmin(who))
    Range := 50;
  endif

  GMultiPage();

  foreach Obj in ListObjectsInBox(who.x-Range,who.y-Range,-127,who.x+Range,who.y+Range,127,who.realm)
    if(Obj.isa(POLCLASS_MOBILE) and Obj != who)
      GCheckNextPage(PAGE_COUNT);
      GButton(  60, (75+(GNPCount()*20)),2117,2118,i);
      GTextLine(80, (71+(GNPCount()*20)),550,Obj.name);
      i := i + 1;
      Mobs.append(Obj);
    endif
  endforeach

  if(Mobs.size())
    SendSysMessage(who, "Znaleziono "+Mobs.size()+" stworzen w zasiegu "+Range+".", FONT_NORMAL, COLOR_GREEN);
    res := GSend(who)[0];
    if(!res)
      SendSysMessage(who,"Anulowano.",FONT_NORMAL,COLOR_RED);
      exit;
    endif
    Whom := Mobs[res];
  else
    SendSysMessage(who,"Nie ma nic w zasiegu "+Range+".",FONT_NORMAL,COLOR_RED);
    exit;
  endif

endfunction

//-----------------------------------------------------------------------------

function ConcealNearNpcs(who, State, Range)

  State := MinMax(CInt(State), 0, 1);

  var aNpc := 0, cNpc := 0;

  foreach Obj in ListObjectsInBox(who.x-Range,who.y-Range,-127,who.x+Range,who.y+Range,127,who.realm)
    if(Obj.isa(POLCLASS_NPC))
      if(Obj.concealed != State)
        cNpc += 1;
        Obj.concealed := State;
        if(!State and Obj.hidden)
          Obj.hidden := 0;
        endif
      endif
      aNpc += 1;
    endif
  endforeach

  SendSysMessage(who, "Concealed ["+State+"]: aNpc: ["+aNpc+"], cNpc: ["+cNpc+"]", FONT_NORMAL, COLOR_GREEN);

endfunction

//-----------------------------------------------------------------------------

function ShowMwGIDs(who, MinNum)

  var MwGIDs    := dictionary;
  var Accs      := ListAccounts();
  var IdCnt     := dictionary;
  var AllMwGids := dictionary;
  var AccNum    := 0;
  var LastIPs, Num, Stealth, MwGid;

  foreach Acc in Accs
    Acc     := FindAccount(Acc);
    LastIPs := ReadFile(LASTLOG_PKG + Acc.name);
    IdCnt   := dictionary;
    Stealth := Acc.GetProp("StlId");

    foreach LIp in LastIPs
      LIp := UnPack(LIp);

      if(Stealth and who.cmdlevel < 4)
        MwGid := Stealth[1];
      else
        MwGid := LIp[5];
      endif

      if(MwGid > 0)
        AllMwGids[MwGid] := 1;

        IdCnt[MwGid] := CInt(IdCnt[MwGid])+1;
        if(IdCnt[MwGid] >= MinNum)
          if(!MwGIDs[MwGid])
            MwGIDs[MwGid] := array(Acc.name);
          elseif(!(Acc.name in MwGIDs[MwGid]))
            MwGIDs[MwGid].append(Acc.name);
          endif
        endif
      endif
    endforeach
  endforeach

  while(IsLoggedIn(who))
    StandMultiSkLayout(20,10);
    GMultiPage();
    GAddPageData(365,55,2650,2651,365,463,2648,2647);

    Accs := array;
    Num  := 0;

    foreach AccArr in MwGIDs
      if(AccArr.size() > 1)
        if(GNPCount() > PAGE_COUNT - 3)
          while(GNPCount() != PAGE_COUNT-1)
            GCheckNextPage(PAGE_COUNT);
          endwhile
        endif

        GCheckNextPage(PAGE_COUNT);
        GTextLine(50,(71+(GNPCount()*20)),670,"-------------------- "+_AccArr_iter+" --------------------");

        foreach Acc in AccArr
          if(!(Acc in Accs))
            AccNum := AccNum + 1;
          endif
          Stealth := Acc.GetProp("StlId");

          if(Stealth and who.cmdlevel < 4)
            MwGid := Stealth[1];
          else
            LastIPs := ReadFile(LASTLOG_PKG + Acc);
            MwGid   := UnPack(LastIPs[LastIPs.size()]);
            MwGid   := MwGid[5];
          endif

          Accs.append(Acc);
          GCheckNextPage(PAGE_COUNT);
          GButton(  60, (75+(GNPCount()*20)),2117,2118,Accs.size());
          GButton(  180,(75+(GNPCount()*20)),2117,2118,100000+Accs.size());
          GTextLine(80, (71+(GNPCount()*20)),550,Acc);
          GTextLine(200,(71+(GNPCount()*20)),550,MwGid);
        endforeach

        Num := Num + 1;
      endif
    endforeach

    if(Accs.size())
      SendSysMessage(who, AccNum+"/"+Accs.size()+" kont.", FONT_NORMAL, COLOR_GREEN);
      SendSysMessage(who, Num+"/"+MwGIDs.size()+" GIDow. Liczba Gidow: "+AllMwGids.size(), FONT_NORMAL, COLOR_BLUE);
      Res := CInt(GSend(who)[0]);
      if(!Res)
        SendSysMessage(who,"Anulowano.",FONT_NORMAL,COLOR_RED);
        exit;
      elseif(Res > 100000)
        WhomAcc := FindAccount(Accs[Res-100000]);
        break;
      endif
    else
      SendSysMessage(who,"Nie znaleziono wielokrotnych IDow.",FONT_NORMAL,COLOR_RED);
      exit;
    endif
  endwhile

endfunction

//-----------------------------------------------------------------------------

function ShowSortedMwGid(who, sId)

  if(!sId)
    SendSysMessage(who, "Nie podano Ida.", FONT_NORMAL, COLOR_RED);
    return;
  endif

  var Accs    := ListAccounts();
  var GidAccs := dictionary;
  var Stealth, MwGid, LastIPs, PdId;

  foreach Acc in Accs
    Acc     := FindAccount(Acc);
    LastIPs := ReadFile(LASTLOG_PKG + Acc.name);
    Stealth := Acc.GetProp("StlId");

    foreach LIp in LastIPs
      LIp := UnPack(LIp);

      if(Stealth and who.cmdlevel < 4)
        MwGid := Stealth[1];
      else
        MwGid := LIp[5];
      endif

      if(MwGid == sId)
        if(Stealth and who.cmdlevel < 4)
          PdId := Stealth[2];
        else
          PdId := LIp[6];
        endif
        GidAccs[LIp[3]+"_"+GidAccs.size()] := array(Acc.name, LIp[2], LIp[3], LIp[4], PdId);
      endif
    endforeach
  endforeach

  StandMultiSkLayout(15,36);
  GTextLine(160,30, 610,"GId "+sId+" ("+GidAccs.size()+")");
  GAddPageData(885,55,2650,2651,885,363,2648,2647);
  GMultiPage();

  var Keys := GidAccs.keys();
  var i, AccInfo;

  Keys.reverse();

  for(i:=1;i<=Keys.size();i:=i+1)
    AccInfo := GidAccs[Keys[i]];

    GCheckNextPage(15);
    GTextLine(50, (70+(GNPCount()*20)),550,AccInfo[1]);
    GTextLine(150,(70+(GNPCount()*20)),570,AccInfo[2]);
    GTextLine(350,(70+(GNPCount()*20)),1410,CUnixTime(CInt(AccInfo[3]), RLT_MONTH));
    if(CInt(AccInfo[4]))
      GTextLine(480,(70+(GNPCount()*20)),1300,CUnixTime(CInt(AccInfo[3])+CInt(AccInfo[4]), RLT_MONTH));
      GTextLine(615,(70+(GNPCount()*20)),560,RealTime(CInt(AccInfo[4])));
    endif

    if(AccInfo[5])
      GTextLine(680,(70+(GNPCount()*20)),580,AccInfo[5]);
    endif
  endfor

  GSend(who);

endfunction

//-----------------------------------------------------------------------------

function EraseDTimer(i,who)

  SendSysMessage(who,"Kasowanie Timera na slocie "+i+", konto - "+WhomAcc.name+".",FONT_NORMAL,COLOR_GREEN);
  var Timer := WhomAcc.GetProp(PROP_CREATION_TIMER);
  Timer[i]  := 0;
  WhomAcc.SetProp(PROP_CREATION_TIMER, Timer);

endfunction

//-----------------------------------------------------------------------------

function ChangeNpcAbility(Npc, AblId, bywho)

  var NewValue   := SendTextEntryGump( bywho, "Wprowadz nowa wartosc",TE_CANCEL_ENABLE);
  if(!NewValue)
    SendSysMessage(bywho,"Anulowano.",FONT_NORMAL,COLOR_RED);
    return;
  endif

  NewValue       := CDbl(NewValue);
  var BaseValue  := CDbl(GetBaseSpecialAbility(Npc, AblId)) * 0.1;

  LogMsg(INFO_LOG,bywho,{Npc,GetAbilityName(AblId),basevalue,newvalue});

  SendSysMessage(bywho,"Zmienil"+ggm(bywho,3)+" wartosc "+GetAbilityName(AblId)+" z "+basevalue+"% do "+newvalue+"% stworzeniu "+Npc.name+".",FONT_NORMAL,COLOR_BLUE);

  SetBaseSpecialAbility(Npc, AblId, NewValue*10);
  sleepms(50); // sleep bo to event leci do AI, i AI odswieza dopiero zdolnosci

endfunction

//-----------------------------------------------------------------------------

function ShowAbilitiesWindow()

  StandSkLayout();
  GPage();

  GButton(  325,487,2453,2454,9997);
  GTextLine(160,30, 610,"Zdolnosci");
  GAddPageData(365,55,2650,2651,365,463,2648,2647);

  var SkID;
  var Abilities := GetSpecialAbilities(whom);

  for(SkID := 1;SkID <= NPC_ABL_MAXID;SkID := SkID + 1)
    GCheckNextPage(PAGE_COUNT);
    GTextLine(70, Cint(67+ (GNPCount()*20)),550,GetAbilityName(SkID));
    GTextLine(270,Cint(67+ (GNPCount()*20)),550,Abilities[SkID]*0.1);
    GButton(310, Cint(70+ (GNPCount()*20)), 2117, 2118, 1000+SkID);
  endfor

endfunction

//-----------------------------------------------------------------------------

function ShowPlayerHouses()

  StandSkLayout(5);
  GButton(  325,190,2453,2454,9997);

  GTextLine(60,30,610,"Domy osoby: "+whom.name);

  var List  := GetHouseOwnerList(whom);
  var i     := 0;

  foreach House in List
    House := FindItemBySerial(House);

    GButton(50, 80+i*20, 2117, 2118, 901+i);
    GTextLine(70, 77+i*20, 550, House.serial);
    GTextLine(210,77+i*20, 670, House.x+","+House.y+","+House.z+" "+House.realm);
    i := i + 1;

  endforeach

endfunction

//-----------------------------------------------------------------------------

function GoToPlayerHouse(who, Nr)

  var List  := GetHouseOwnerList(whom);
  var House := FindItemBySerial(List[Nr]);

  if(House)
    SendSysMessage(who, "Przenoszenie do domu Nr: "+Nr+" ["+House.x+","+House.y+","+House.z+" "+House.realm+"]", FONT_NORMAL, COLOR_GREEN);
    MoveObject(who, House.x, House.y, House.z, House.realm, MOVECHAR_FORCELOCATION, MOVETYPE_CMD);
  endif

endfunction

//-----------------------------------------------------------------------------

function ModifySkillMod(who, SkID)

  var Amt := SendTextEntryGump(who, "Wpisz wartosc");
  if(Amt)
    Amt := CInt(Amt);
    ModifySkillTemporaryMod(whom, SkID, Amt);
    SendSysMessage(who, "Zmienil"+ggm(who,3)+" SkMod SkID: "+SkID+" osobie "+Whom.name+" o "+Amt, FONT_NORMAL, COLOR_GREEN);
  endif

endfunction

//-----------------------------------------------------------------------------

function ShowPlayerHunger()

  StandSkLayout(10);
  GButton(  325,290,2453,2454,102);

  GTextLine(50,30,610,"Odswiez");
  GButton(30,  34,  2117,2118,9844);

  GTextLine(160,30,610,"Glod: "+whom.name);

  GButton(30, 80, 2117, 2118, 9847);
  GTextLine(50, 77, 1419, GetNutrValue(whom, NVI_HUNGER));
  GTextLine(80, 77, 999,  "Glod:");
  GTextLine(170,77, 560,  GetNutrValState(GetNutrValue(whom, NVI_HUNGER)));

  GButton(30, 100, 2117, 2118, 9846);
  GTextLine(50, 97, 1419, GetNutrValue(whom, NVI_PROTEIN));
  GTextLine(80, 97, 999,  "Bialka:");
  GTextLine(170,97, 560,  GetNutrValState(GetNutrValue(whom, NVI_PROTEIN)));

  GButton(30, 120, 2117, 2118, 9845);
  GTextLine(50, 117,1419, GetNutrValue(whom, NVI_VITAMIN));
  GTextLine(80, 117, 999, "Witaminy:");
  GTextLine(170,117, 560, GetNutrValState(GetNutrValue(whom, NVI_VITAMIN)));

  GButton(30, 140, 2117, 2118, 9848);
  GTextLine(50, 137,1419, GetNutrValue(whom, NVI_SUGAR));
  GTextLine(80, 137, 999, "Weglowodany:");
  GTextLine(170,137, 560, GetNutrValState(GetNutrValue(whom, NVI_SUGAR)));

  GButton(30, 183, 2117, 2118, 9850);
  GTextLine(50, 180, 999, "Czas od ostatniego glodu");
  if(GetObjProperty(whom, PROP_LASTHUNGER_TIME))
    GTextLine(220,180, 550, RealTime(GetObjProperty(whom, PROP_ONLINETIMER) - CInt(GetObjProperty(whom, PROP_LASTHUNGER_TIME))));
  else
    GTextLine(220,180, 1204, "Brak");
  endif

  GTextLine(50, 200, 999, "Czas do zglodnienia");
  if(GetObjProperty(whom, PROP_HUNGERDELAY))
    GTextLine(220,200, 550, RealTime(CInt(GetObjProperty(whom, PROP_HUNGERDELAY))));
  else
    GTextLine(220,200, 1204, "Brak");
  endif

endfunction

//-----------------------------------------------------------------------------

function ChangeNutrValue(whom, nvIdx, who)

  var newVal := SendTextEntryGump(who, "Wprowadz wartosc", TE_CANCEL_ENABLE);

  if(!newVal)
    SendSysMessage(who, "Anulowano.", FONT_NORMAL, COLOR_RED);
    return;
  endif

  newVal := CInt(newVal);

  SetNutrValue(whom, nvIdx, newVal);

endfunction

//-----------------------------------------------------------------------------

function ResetHungerTime()

  SetObjProperty(whom, PROP_LASTHUNGER_TIME, GetObjProperty(whom, PROP_ONLINETIMER) - GetObjProperty(whom, PROP_HUNGERDELAY));

endfunction

//-----------------------------------------------------------------------------

function ShowGuardCriminals()

  StandMultiSkLayout(15, 19);
  GButton(  505,390,2453,2454,102);
  GAddPageData(545,55,2650,2651,545,363,2648,2647);

  GTextLine(60,30,610,"Pamiec straznika: "+whom.name);
  GMultiPage();

  var Criminals := GetObjProperty(whom, PROP_GUARD_CRIMINALS);
  var Player;

  foreach Props in (Criminals)
    GCheckNextPage(15);
    Player := FindPlayerBySerial(_Props_iter);
    GTextLine(50, 70+GNPCount()*20, 550, GetRealName(Player));
    GTextLine(210,70+GNPCount()*20, 670, RealTime(ReadGameClock() - Props[1]));
    case(Props[2])
      GMR_CHASING:       GTextLine(300,70+GNPCount()*20, 1419, "Scigany przez straz");
      GMR_ANIMAL_INB:    GTextLine(300,70+GNPCount()*20, 1419, "Zwierzak w budynku");
      GMR_NOT_MURD:      GTextLine(300,70+GNPCount()*20, 1419, "Nie morderca");
      GMR_TO_WEAK_MURD:  GTextLine(300,70+GNPCount()*20, 1419, "Za slaby morderca");
      GMR_MURD:          GTextLine(300,70+GNPCount()*20, 1419, "Morderca");
      GMR_CRIMINAL:      GTextLine(300,70+GNPCount()*20, 1419, "Kryminalista");
      GMR_STEALING:      GTextLine(300,70+GNPCount()*20, 1419, "Kradziez");
      GMR_ATTACKED:      GTextLine(300,70+GNPCount()*20, 1419, "Zaatakowany straznik");
      GMR_INMEMORY:      GTextLine(300,70+GNPCount()*20, 1419, "Pamietany");
      GMR_CITYCHASING:   GTextLine(300,70+GNPCount()*20, 1419, "Scigany w miescie");
      GMR_NPCATTACKED:   GTextLine(300,70+GNPCount()*20, 1419, "Atak na Npca");
      GMR_TAMEDFIGHT:    GTextLine(300,70+GNPCount()*20, 1419, "Bilem jego zwierzaka");
      GMR_PLAYER_ATTACK: GTextLine(300,70+GNPCount()*20, 1419, "Atak na gracza");
      default:           GTextLine(300,70+GNPCount()*20, 1206, "Brak");
    endcase

    GTextLine(470,70+GNPCount()*20, 670, Props[3]);
  endforeach

endfunction

//-----------------------------------------------------------------------------

function ShowNpcMember()

  StandMultiSkLayout(15);
  GButton(  325,390,2453,2454,102);
  GAddPageData(365,55,2650,2651,365,363,2648,2647);

  GTextLine(60,30,610,"Pamiec npeca: "+whom.name);
  GMultiPage();

  var Member := GetObjProperty(whom, PROP_NPC_MEMBER);
  var Player;

  foreach Time in (Member)
    GCheckNextPage(15);
    Player := FindPlayerBySerial(_Time_iter);
    GTextLine(50, 70+GNPCount()*20, 550, GetRealName(Player));
    GTextLine(210,70+GNPCount()*20, 670, RealTime(ReadGameClock() - (Time - NPC_MEMBER_TIME)));
  endforeach

endfunction

//-----------------------------------------------------------------------------

function BuildRawSkillsGump()

  StandSkLayout(22, 32);
  GPage();
  
  GAddPageData(785,55,2650,2651,785,503,2648,2647);
  
  GButton(  765,530,2453,2454,8002);

  GButton(50, 533, 2117, 2118, 8002);
  GTextLine(70, 530, 670, "Statystyki");

  GTextLine(60,30,610,"Umiejetnosci RAW: "+whom.name);
  
  GButton(580, 33, 2117, 2118, 8001);
  GTextLine(600,30,610,"Odswiez");

  GTextLine(50, 77, 999, "Atrybut");
  GTextLine(220, 77, 999, "Base");
  GTextLine(310, 77, 999, "Gain");
  GTextLine(400, 77, 999, "Left");
  GTextLine(490, 77, 999, "BaseRaw");
  GTextLine(580, 77, 999, "CurRaw");
  GTextLine(670, 77, 999, "NextRaw");
  
  var AttrCfg := ReadConfigFile(ATTRIBUTES_CFG);

  for SkId := 0 to SKILLID__HIGHEST

    GCheckNextPage(20);
    var AttrId := GetAttributeIdBySkillId(SkId);
    var RawStr := GetAttrRawArray(whom, AttrId);

    GTextLine(50,  97+(GNpCount()*20), 560, "["+SkId+"] "+AttrCfg[AttrId].Name);
    GTextLine(220, 97+(GNpCount()*20), 550, RawStr.baseVal * 0.1);
    GTextLine(310, 97+(GNpCount()*20), 550, RawStr.gainPoints);
    GTextLine(400, 97+(GNpCount()*20), 1420, RawStr.leftPoints);
    GTextLine(490, 97+(GNpCount()*20), 550, RawStr.basePoints);
    GTextLine(580, 97+(GNpCount()*20), 1320, RawStr.curPoints);
    GTextLine(670, 97+(GNpCount()*20), 550, RawStr.nextPoints);

  endfor

endfunction

//-----------------------------------------------------------------------------

function ProcessMaxSkInfoGump(who)

  while(IsLoggedIn(who))

    StandSkLayout(12, 15);
    GButton(  325,330,2453,2454,9);

    GTextLine(60,30,610,"Max Umiejetnosci: "+whom.name);

    var MaxSk := GetMaxSkills(whom);
    var i := 0;

    foreach SkData in MaxSk
      var SkId := GetSkillIdByAttributeId(_SkData_iter);
      if(isAdmin(who))
        GButton(60, 72+(i*80), 2117, 2118, 10+SkId);
        GButton(62, 94+(i*80), 0x938, 0x93A, 200+SkId);
      endif
      GTextLine(80, 70 + i*80, 1310, GetSkillConfigElem(SkId).Name);
      GTextLine(250, 70 + i*80, 560, GetSkillMaxValue(whom, SkId)+"%");
      GTextLine(90, 95 + i*80, 999, "Data wybrania:");
      GTextLine(180, 95 + i*80, 1420, GetDescDate(SkData[2]));
      GTextLine(320, 115 + i*80, 1320, RealTime(ReadGameClock() - SkData[2]) + " temu");
      GTextLine(320,70+(i*80), 999, GetMaxSkillTypeName(SkData[1]));

      if(SkData.size() == 3)
        GTextLine(90, 115 + i*80, 999, "Obnizenie za:");
        GTextLine(180, 115 + i*80, 1219, RealTime((SkData[3]+MSK_DELAYED_INTERVAL) - ReadGameClock()));  
      endif
      i += 1;
    endforeach

    var Res := CInt(GSend(who)[0]);

    if(Res == 1)
      SetMaxSkValueGump(who, whom);
    elseif(Res >= 10)
      var SkID := Res-10;
      Res := EraseMaxSkill(whom, SkID);
      if(Res)
        SendSysMessage(who, "Usunieto maksymalna wartosc umiejetnosci "+GetSkillConfigElem(SkID).Name+" postaci "+GetRealName(whom)+".", FONT_NORMAL, COLOR_GREEN);
      endif
    else
      break;
    endif

    MaxSk := GetMaxSkills(who);

  endwhile

endfunction

//-----------------------------------------------------------------------------

function BuildRawStatsGump()

  StandSkLayout(5, 32);
  
  GButton(  765,190,2453,2454,9997);

  GTextLine(60,30,610,"Statystyki RAW: "+whom.name);
  
  GButton(580, 33, 2117, 2118, 8002);
  GTextLine(600,30,610,"Odswiez");

  GTextLine(50, 77, 999, "Atrybut");
  GTextLine(150, 77, 999, "Base");
  GTextLine(250, 77, 999, "Gain");
  GTextLine(350, 77, 999, "Left");
  GTextLine(450, 77, 999, "BaseRaw");
  GTextLine(550, 77, 999, "CurRaw");
  GTextLine(650, 77, 999, "NextRaw");
  
  var AttrCfg := ReadConfigFile(ATTRIBUTES_CFG);

  foreach AttrId in array(ATTRIBUTEID_STRENGTH, ATTRIBUTEID_DEXTERITY, ATTRIBUTEID_INTELLIGENCE)

    var RawStr := GetAttrRawArray(whom, AttrId);

    GTextLine(50, 77+(_AttrId_iter*20), 560, AttrCfg[AttrId].Name);
    GTextLine(150, 77+(_AttrId_iter*20), 550, RawStr.baseVal * 0.1);
    GTextLine(250,77+(_AttrId_iter*20), 550, RawStr.gainPoints);
    GTextLine(350,77+(_AttrId_iter*20), 1420, RawStr.leftPoints);
    GTextLine(450,77+(_AttrId_iter*20), 550, RawStr.basePoints);
    GTextLine(550,77+(_AttrId_iter*20), 1320, RawStr.curPoints);
    GTextLine(650,77+(_AttrId_iter*20), 550, RawStr.nextPoints);

  endforeach

  GButton(50, 190, 2117, 2118, 8001);
  GTextLine(70, 187, 670, "Umiejetnosci");

endfunction

//-----------------------------------------------------------------------------

function SetMaxSkValueGump(who, whom)

  if(who != whom)
    return;
  endif

  var Data := struct;
  Data.cfgClass := GetCharClassConfig(whom);
  Data.ClassId := GetCharClass(whom);

  var SkID  := SelectClassSkillGump(who, Data);

  if(SkID == error)
    return;
  endif

  var SkVal := SendTextEntryGump(who, "Wpisz maksymalna wartosc", 0, TE_STYLE_NUMERICAL, 200);

  if(!SkVal)
    return;
  endif

  SkVal := CInt(SkVal) * 10;

  SetMaxSkillValue(whom, SkID, SkVal, MSKT_NPCGUILD);
  SendSysMessage(who, "Ustawiono MaxSk ["+GetSkillConfigElem(SkID).Name+" - "+(SkVal*0.1)+"] osobie "+GetRealName(whom), FONT_NORMAL, COLOR_GREEN);

endfunction

//-----------------------------------------------------------------------------

function ProcessEraseMurdPenalty()

  var MurdData := GetMurdData(whom);
  MurdData.LastKill := 0;
  MurdData.Counter := 0;
  SetObjProperty(whom, PROP_MURDPNDATA, MurdData);
  CheckMurdPenalty(whom, 0);

endfunction

//-----------------------------------------------------------------------------

function ShowPlayerMurdPenalty(who)

  StandSkLayout(7);
  GButton(  325,230,2453,2454,9977);

  GTextLine(60,30,610,"Kara za morderstwa osoby: "+whom.name);

  var MurdData := GetObjProperty(whom, PROP_MURDPNDATA);

  if(MurdData)

    GTextLine(70, 77, 550, "Licznik:");
    GTextLine(210,77, 670, MurdData.Counter);
    GTextLine(70, 97, 550, "Czas od ost:");
    if(MurdData.LastKill)
      if(CmdHaveAccess(who, whom, CMDA_SECRET | CMDA_MODIFY))
        GButton(50, 100, 2117, 2118, 9965);
      endif
      GTextLine(210,97, 670, RealTime(CInt(GetObjProperty(whom, PROP_ONLINETIMER)) - CInt(MurdData.LastKill)));
    else
      GTextLine(210,97, 1419, "Brak");
    endif
    GTextLine(70, 117,550, "Klatwa:");
    GTextLine(210,117,670, MurdData.CurseMod*-1);
    GTextLine(70, 137,550, "Akt. Klatwa:");
    MurdData.CurCurse := CInt(GetObjProperty(whom, PROP_MURDPNCURSE));
    GTextLine(210,137,670, MurdData.CurCurse*-1);
    GTextLine(70, 157,550, "Ost zabity:");
    GTextLine(210,157,670, GetRealName(FindPlayerBySerial(MurdData.LastVicSer))+" / "+MurdData.LastVicSer);
    GTextLine(70, 177,550, "Flagi:");
    GTextLine(210,177,670, MurdData.Flags);
  else

    GTextLine(70, 77, 550, "Brak");

  endif
  
  if(CmdHaveAccess(who, whom, CMDA_MODIFY) and IsMurdPenaltyEnabled())
    GButton(150, 233, 2117, 2118, 9967);
    GTextLine(170, 230, 550, "Usun");
  endif

endfunction

//-----------------------------------------------------------------------------

function SetOnlineTimer(who)

  var NewTime := SendTextEntryGump(who,"Podaj Czas",TE_CANCEL_ENABLE);
  if(!CInt(NewTime))
    SendSysMessage(who,"Anulowano.",FONT_NORMAL,COLOR_RED);
    return;
  endif
  SetObjProperty(whom,PROP_ONLINETIMER,CInt(NewTime));

endfunction

//-----------------------------------------------------------------------------
