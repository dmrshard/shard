//-----------------------------------------------------------------------------

include "ai/include/npch";
include "include/gumps";
include "ai/include/citynpcs";
include "include/cmds/misc";

include ":auction:auc";
include ":gambling:gamble_gump";
include ":donations:royalmerchant";
include "../pkg/systems/renthouse/renthouse";
include ":housing:housing";
include "../pkg/systems/npcguilds/guilds";
include "../pkg/systems/craftquests/craftquests";
include "../pkg/items/hairs/hairs";
include "../pkg/warcasts/warcasts";
include ":waypoints:include/gumps";

//-----------------------------------------------------------------------------

program HandleNpc(Event)

  SetLogRunCycles(LST_CONTROL);

  case(Event.type) 
    EVID_NH_BARBER_GUMP:      BarberGump(Event);
    EVID_NH_TRAVEL_GUMP:      TravelGump(Event);
    EVID_NH_AUCTION_GUMP:     AuctionGump(Event); 
    EVID_NH_NPC_SELECT:       NpcSelect(Event);
    EVID_NH_ITEM_SELECT:      ItemSelect(Event);
    EVID_NH_TEGUMP_SELECT:    TegRequest(Event);
    EVID_NH_RENT_HOUSE:       RentHouseEvent(Event);
    EVID_NH_RENT_TIME:        RentTimeEvent(Event);
    EVID_NH_YESNO_GUMP:       YesNoGump(Event);
    EVID_NH_TRAIN_GUMP:       TrainGump(Event);
    EVID_NH_SEL_WCID_GUMP:    SelectWcIDGump(Event);
    EVID_NH_HOUSE_GUMP:       SelectHouseGump(Event);
    EVID_NH_ROYAL_GUMP:       SendRewardGump(Event);
    EVID_NH_GAMBLE_GUMP:      GamblerGump(Event);
  endcase

endprogram

//-----------------------------------------------------------------------------

function NpcSelect(byref Event)

  Event.+pet := ObjTarget(Event.source);

  SendEvent(Event.npc, Event);

endfunction

//-----------------------------------------------------------------------------

function ItemSelect(byref Event)

  var who       := Event.source;
  var npc       := Event.npc;

  var item      := ObjTarget(who);

  Event.+item   := item;

  SendEvent(npc,Event);

endfunction

//-----------------------------------------------------------------------------

function TegRequest(byref Event)

  var Text := SendTextEntryGump(Event.source,Event.oth,TE_CANCEL_ENABLE);

  Event.+tetxt  := text;

  SendEvent(Event.npc,Event);

endfunction

//-----------------------------------------------------------------------------

function RentHouseEvent(byref Event)

  var Houses := GetCityHouses(Event.oth);
  var House;
  var who    := Event.source;

  if(!Houses.size())
    PrintTextAbovePrivate(Event.npc,"W tym miejscu nie ma domow do wynajmu.",who);
    House := 0;
  else
    House := SelectRentHouse(who, Houses, Event.oth);
  endif

  Event.+house := House;
  SendEvent(Event.npc,Event);

endfunction

//-----------------------------------------------------------------------------

function RentTimeEvent(byref Event)

  var Time   := 0;
  var who    := Event.source;

  Time       := SelectRentTime(who,Event.oth);
  Event.+time := Time;

  SendEvent(Event.npc,Event);

endfunction

//-----------------------------------------------------------------------------

function YesNoGump(byref Event)

  Event.+res := YesNo(Event.source,Event.oth);
  SendEvent(Event.npc,Event);

endfunction

//-----------------------------------------------------------------------------

function TrainGump(byref Event)

  var SkillVal;
  var cTeach;
  var i := 0;
  var Skills := GetMerchantTeachSkills(Event.npc);

  GInit(50,50);
  GResPic(0,0,BKGND_SILVERTRIM,300,80 + (Skills.size() * 20));

  GTextLine(50,25,400,"Umiejetnosci: ");

  foreach Skill in Skills
    SkillVal := GetBaseSkillBaseValue(Event.source,CInt(_Skill_iter));
    cTeach   := CITYNPC_MAXTRSK - SkillVal;

    if(cTeach <= 0)
      GTextLine(55, 50 + (i*20), 999,  Skill);
      GGumpPic(30, 53 + (i*20), 2118);
      cTeach := 0;
    else
      GTextLine(55, 50 + (i*20), 500,  Skill);
      GButton(30, 53 + (i*20), 2117 ,2118 ,CInt(_Skill_iter)+1);
    endif

    GTextLine(250,50 + (i*20), 400, CStr(CDbl(cTeach * 0.1))+"%");

    i := i + 1;
  endforeach

  Event.+skId := GSend(Event.source)[0];

  SendEvent(Event.npc,Event);

endfunction

//-----------------------------------------------------------------------------

function SelectWcIDGump(byref Event)

  var WarCfg := GetWarCastCfg();

  if(!Event.oth.size())
    Event.+wcId := 0;
    SendEvent(Event.npc, Event);
    return;
  endif

  GInit(200, 50);
  GResPic(0, 0, 0x24A4, 300, ToMin(70+Event.oth.size()*30, 180));
  GTextLine(130, 5, 999, "Modlitwy");

  var n := 1;

  foreach Id in (Event.oth)
    if(Id == 1)
      GButton(30, 5+(n)*30, 0x25F8, 0x25F9, _Id_iter);
      GTextLine(65, 10+(n)*30, 1152, WarCfg[_Id_iter].Name);
    elseif(Id == -1)
      GTextLine(65, 10+(n)*30, 1204, WarCfg[_Id_iter].Name);
    elseif(Id == 0)
      GTextLine(65, 10+(n)*30, 998, WarCfg[_Id_iter].Name);
    else
      continue;
    endif
    n := n + 1;
  endforeach

  var Res := CInt(GSend(Event.source)[0]);

  if(Res)
    if(Event.oth[Res] != 1)
      Res := 0;
    endif
  endif

  Event.+wcId := Res;
  SendEvent(Event.npc, Event);

endfunction

//-----------------------------------------------------------------------------

function SelectHouseGump(byref Event)

  Event.res := 0;

  var Houses;
  GetHouses(Houses);

  GInit(50, 50);
  GResPic(0, 0, 0x24A4, 700, 540);
  GTextLine(300, 5, 999, "Dostepne domy");
  GAddPageData(655, 35, 0x262C,0x262C, 655, 498, 0x262B, 0x262B);
  GTextLine(175, 40, 999, "Nazwa");
  GTextLine(400, 40, 999, "Cena");
  GTextLine(520, 40, 999, "Zablok.");
  GTextLine(570, 40, 999, "Zabez.");
  GTextLine(620, 40, 999, "Pokaz");
  GPage();

  var City  := FindCity(Event.npc);
  var Id    := 1;
  var ResId := 0;
  var hCfg  := ReadConfigFile(":housing:city_houses");

  var AvHouses;

  if(!hCfg[City])
    AvHouses := GetConfigStringArray(hCfg["none"], "House");
  else
    AvHouses := GetConfigStringArray(hCfg[City], "House");
  endif

  if(!AvHouses.size())
    PrintTextAbove(Event.npc, "Przykro mi, ale nie mam teraz zadnych deedow na domy do sprzedania.");
    SendEvent(Event.npc, Event);
    return;
  endif

  foreach House in Houses
    if(House.Name in AvHouses)
      GCheckNextPage(15);
      var HousePrice := GetObjTypePrice(Event.source, City, House.DeedObjType, 1);
      GButton(30,   70+GNPCount()*30, 0x845, 0x846, 1000+_House_iter);
      GTextLine(50, 65+GNPCount()*30, 1421, Id+".");
      GTextLine(75, 65+GNPCount()*30, 1152, House.desc);
      GTextLine(400,65+GNPCount()*30, 1118, FormatSize(HousePrice, ".")+" gp");
      GTextLine(520,65+GNPCount()*30, 1101, House.NumLockDowns);
      GTextLine(570,65+GNPCount()*30, 1101, House.NumSecure);
      GButton(630,  70+GNPCount()*30, 0x25E8, 0x25E9, _House_iter);
      GGumpPic(30,  85+GNPCount()*30, 0xA8C);
      GGumpPic(130, 85+GNPCount()*30, 0xA8C);
      Id += 1;
    endif
  endforeach

  while(ResId < 1000)
    ResId := CInt(GSend(Event.source)[0]);

    if(!ResId)
      break;
    elseif(ResId > 1000)
      var House := Houses[ResId-1000];
      if(House.name in AvHouses)
        Event.res := CInt(House.DeedObjType);
      endif
      break;
    elseif(Houses[ResId])
      SendSysMessage(Event.source, "Nacisnij ESC by anulowac.", FONT_NORMAL, COLOR_GREEN);
      TargetMultiPlacement(Event.source, GetHouseObjtype(Houses[ResId].DeedObjType));
    else
      break;
    endif

  endwhile

  SendEvent(Event.npc, Event);

endfunction

//-----------------------------------------------------------------------------

function TravelGump(Event)

  var who     := Event.source;
  var npc     := Event.npc;

  var Res := SendTravelGump(who, Event.Locations);

  Event   := struct;

  Event.+type   := EVID_NH_TRAVEL_GUMP;
  Event.+npc    := npc;
  Event.+source := who;
  Event.+res    := Res;

  SendEvent(npc, Event);

endfunction

//-----------------------------------------------------------------------------
