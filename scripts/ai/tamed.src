//-----------------------------------------------------------------------------

use npc;

//-----------------------------------------------------------------------------

include "include/npccast";
include "include/mount";
include "include/ainpcs";
include "include/buildings";
include "include/poison";
include "include/smartrun";
include "include/dirs";
include "include/checks/objchecks";
include "include/client/anims";
include "include/gumpboxes";
include "include/mobile/misc";
include "ai/setup/default_setup";
include "include/coords";

include ":magiceffects:summon";
include ":wearwolf:common";
include ":spawnnet:spawnnet";
include ":reslogon:petsecure";

//-----------------------------------------------------------------------------

const T_SPEECH_RANGE    := 8;
const HALT_THRESHOLD    := 15;
const FENCE_EAT_TIME    := 900;
const FREE_TIME         := 1800;
const FREE_TIME_RANGE   := 20;
const MAX_TAMED         := 10;
const ENVIOUS_INTERVAL  := 3;
const ENVIOUS_MAX_COUNT := 10;

const MECHANIC_SLEEP    := 3600;

const MF_RESTMODE       := 0x0001;
const MF_SMARTRUN       := 0x0002;
const MF_HEALING        := 0x0004;
const MF_ENDURANCE      := 0x0008;
const MF_ONLYONE        := 0x0020;
const MF_PATH_GAIN      := 0x0040;
const MF_ARCHER         := 0x8000;

const REST_WAITTIME     := 1;

const BREED_MATURE_TIME := 604800; // 7d
const BREED_CHANCE      := 80; // 1000 / BREED_CHANCE
const NEW_BREED_DELAY   := 3600;
const MIN_TAME_SK_TO_GD := 60;  // minimalna wartosc skilla oswajanie, aby zwierze strzeglo zwlok.

const SPECIAL_GAIN_MULT := 1.5;

//-----------------------------------------------------------------------------
// Lots of globals...
//-----------------------------------------------------------------------------

var _MeMaster;

var dmgsound, NextIdle, opponent, following, FollowTime, guarding, spells, LastBreath, Mechanic, GuardCorpse, MasterCorpse;
var Trough, RawAbilities, Abilities, MasterAblSkID, MyFlags, RestTime, RestHealAmt, LastFight, LastRest, LastHealTime;
var FoodArray, chkRestrClock, SpecFlag, Specs, LastTextTime, BreedPartner, BreedTime, BreedSkill, BreedDelay;
var gEnviousCount;

//-----------------------------------------------------------------------------
// Inicjalizacja zmiennych globalnych
//-----------------------------------------------------------------------------

function InitData()

  erase_anchor();

  _MeMaster  := GetMaster(me);

  if(!GetObjProperty(me,"NextGuardWatch"))
    SetObjProperty(me,"NextGuardWatch",ReadGameClock());
  endif

  SetWarMode(0);
  SetUpAr();
  SaveAiSerial();

  EraseFromSpawnnet(me);

  if(!IsSetFlag(me, NPCF_MIN_LOOT))
    SetFlag(me, NPCF_NO_LOOT);
  endif

  var cfgElem    := GetNpcConfig(me);
  dmgsound       := CInt(cfgElem.damagedsound);
  NextIdle       := ReadGameClock();
  opponent       := 0;
  following      := 0;
  FollowTime     := 0;
  guarding       := 0;
  spells         := GetNpcSpells();
  LastBreath     := ReadGameClock();
  LastHealTime   := 0;
  Mechanic       := CInt(cfgElem.Mechanic);
  GuardCorpse    := 0;
  MasterCorpse   := 0;

  RawAbilities   := GetRawSpecialAbilities(me);
  Abilities      := GetSpecialAbilities(me);

  MasterAblSkID  := SKILLID_TAMING;
  MyFlags        := 0;
  RestTime       := 0;
  RestHealAmt    := GetMaxHp(me) / 100;
  LastFight      := 0;
  LastRest       := 0;
  gEnviousCount  := 0;

  if(!RestHealAmt)
    RestHealAmt := 1;
  endif

  if(Mechanic)
    MasterAblSkID := SKILLID_TINKERING;
  endif

  var FoodCfg    := ReadConfigFile(FOOD_CFG);
  var FoodType   := cfgElem.food;

  if(!FoodType)
    FoodType     := "all";
  endif

  FoodArray := GetConfigStringArray(FindConfigElem(FoodCfg,foodtype),"food");

  if(me.backpack)
    SetObjProperty(me.backpack, PROP_OWNER, _MeMaster.serial);
  endif

  
  LastTextTime  := ReadGameClock() + 10 + RandomInt(15);

  BreedPartner  := 0;
  BreedTime     := CInt(GetObjProperty(me, "BreedTime"));
  BreedSkill    := CInt(cfgElem.BreedSkill);
  BreedDelay    := CInt(cfgElem.BreedDelay);

  if(CInt(cfgElem.Gender) == 2)
    BreedPartner := cfgElem.BreedPartner;
  endif

  if(!_MeMaster)
    Release();
  endif

  me.SetMurderer(_MeMaster.murderer);
  SetCriminal(me, _MeMaster.criminal, "", "Start skryptu npca, krim ustawiony bo wlasciciel ["+_MeMaster.serial+"] byl kryminalista.");

  SetSpecs();

  if(GetObjProperty(me,"FenceTrough"))
    Trough := SystemFindObjectBySerial(CInt(GetObjProperty(me,"FenceTrough")));
  endif

  SetObjProperty(me, PROP_MASTER, _MeMaster.serial);
  set_event_queue_size(40);

  if(CInt(cfgElem.OnlyOneTamed))
    SetBitOn(MyFlags, MF_ONLYONE);
  endif

  if(cfgElem.AttackAttribute == "Archery")
    SetBitOn(MyFlags, MF_ARCHER);
  endif

  return 1;

endfunction

//-----------------------------------------------------------------------------

program TamedAI()

  // glupi MoveObject dla pola 99, bo bez tego spamuje enteredArea event bez konca do kazdego npeca, ktory sie ruszy w zasiegu tego npeca.
  MoveObject(me, me.x, me.y, me.z, me.realm, MOVECHAR_FORCELOCATION);

  if(!InitData())
    return 0;
  endif

  SetLogRunCycles(LST_AI);

  if(_MeMaster.isa(POLCLASS_NPC))
    SetFollowing(_MeMaster);
    guarding  := _MeMaster;
    waittime  := 3;
    SetObjProperty(me,"NpcSummoned", _MeMaster.serial);
  endif

  if(GetObjProperty(me,"TempHappinessCounter"))
    SetHappinessCounter(Me,ReadGameClock() + CInt(GetObjProperty(me,"TempHappinessCounter")));
    EraseObjProperty(me,"TempHappinessCounter");
  endif

  if(GetNecroControlledTime(me))
    Abilities[NPC_ABLID_HEALING]  := 1000;
    Abilities[NPC_ABLID_PATHFIND] := 1000;
  endif

  EnableMainEvents();

  if(GetObjProperty(me,PROP_MOUNTING))
    MountSleep();
  else
    CheckSecurePet(Me);
  endif

  while(me)
    if(!_MeMaster)
      _MeMaster := GetMaster(me);
    endif

    if(!_MeMaster)
      Release();
    endif

    CheckRestriction();

    if(me.murderer != _MeMaster.murderer)
      me.SetMurderer(CInt(_MeMaster.murderer));
    endif

    if(me.criminal != _MeMaster.criminal)
      SetCriminal(me, _MeMaster.criminal, "TamedAI", "Wlasciciel ["+_MeMaster.serial+"] mial krima, a npc nie.");
    endif

    if(Distance(me, _MeMaster) > FREE_TIME_RANGE and !GetObjProperty(me,"FenceStay") and !Mechanic)
      if(!GetObjProperty(me,"FreeTime"))
        SetObjProperty(me,"FreeTime",ReadGameClock());
      endif
      if(CInt(GetObjProperty(me,"FreeTime")) + FREE_TIME < ReadGameClock())
        Release();
      endif
    else
      EraseObjProperty(me,"FreeTime");
    endif

    if(!ev)
      if(gEnviousCount > 0)
        ev := os::wait_for_event(1);
      elseif(waittime > 5)
        ev := os::wait_for_event(waittime + RandomInt(CInt(waittime/3)));
      else
        ev := os::wait_for_event(waittime);
      endif
    endif

    StdHandleEvent(ev);

    if(!_MeMaster)
      _MeMaster := GetMaster(me);
    endif

    if(!_MeMaster)
      Release();
    endif

    if(_MeMaster.isa(POLCLASS_NPC))
      if(following != _MeMaster)
        SetFollowing(_MeMaster);
      endif
      if(guarding != _MeMaster)
        guarding := _MeMaster;
      endif
    endif

    if(guarding)
      Guard();
    endif

    if(following != 0)
      if(!GetObjProperty(me,"#Following"))
        EndFight();
        SetObjProperty(me,"#Following",following.serial);
      endif
      if(!Follow())
        EraseObjProperty(me,"#Following");
      endif
    elseif(GetObjProperty(me,"#Following"))
      EraseObjProperty(me,"#Following");
      waittime := DEF_WAITTIME;
    endif

    if(IsSetFlag(me, NPCF_TAMED_CGUARD) and !following and !guarding and MasterCorpse and Distance(MasterCorpse, me) < 10)
      GuardCorpse := MasterCorpse;
    endif

    if(GuardCorpse)
      CorpGuard();
    endif

    if(IsSummoned(me))
      if(CheckSummonedCreature(me))
        Release();
        break;
      endif
    elseif(IsSkillSum(me))
      if(CInt(GetObjProperty(me, PROP_SK_SUMMONED)) + LIFETIME_SUMMONED < ReadGameClock()) 
        SetFlag(me, NPCF_NO_LOOT);
        DealDamage(me, 6000);
        exit;
      endif
    else
      if(GetObjProperty(me,PROP_MOUNTING))
        MountSleep();
      endif

      CheckRestMode();

      if(CheckHappinessCounter(me) or CheckNecroControl(me))
        Release();
        break;
      endif

      if(!following and !guarding)
        if(!IsBitOn(MyFlags, MF_RESTMODE))
          AnimalIdle();
        endif
        CheckFence();
        CheckBreed();
      endif
    endif

  endwhile

endprogram

//-----------------------------------------------------------------------------

function StdHandleEvent(byref ev)

  if(!ev)
    return 0;
  endif

  if(!ev.source.dead)
    case(ev.type)
      EVID_SPEECH:           ProcessSpeech(ev.source,lower(ev.text));
                             ev := 0;
                             return 1;

      EVID_ALL_ATTACK_CMD:
      EVID_ENGAGED:
      EVID_DAMAGED:          if(ev.others == "priormax")      
                               if(ev.source != opponent and ev.source)
                                 Fight(ev.source);
                               endif
                             elseif(ev.source != opponent and ev.source and !IsSleeping(me))
                               if((!following or (_MeMaster.isa(POLCLASS_NPC) and RandomInt(100) < 30) or FollowTime + 20 + RandomInt(10) < ReadGameClock() or RandomInt(100) <= 4 or ev.type == EVID_ALL_ATTACK_CMD))
                                 EndRestMode();
                                 if(MeHaveFlag("RunLikeHell"))
                                   if(CanVsAttack(ev.source, me))
                                     TamedRunLikeHell(ev.source);
                                   endif
                                   ev := 0;
                                   return 1;
                                 elseif((ev.type == EVID_ALL_ATTACK_CMD and CanVsAttack(Me,ev.source)) or (ev.type != EVID_ALL_ATTACK_CMD and CanVsAttack(ev.source,Me)))
                                   if(following and !_MeMaster.isa(POLCLASS_NPC) and !opponent and ev.type != EVID_ALL_ATTACK_CMD and !Mechanic)
                                     Say("*wsciekle*");
                                   endif
                                   Fight(ev.source);
                                   ev := 0;
                                   return 1;
                                 else
                                   ev := 0;
                                   return 1;
                                 endif
                               elseif(!_MeMaster.isa(POLCLASS_NPC) and RandomInt(100) <= 7)
                                 if(Mechanic)
                                   Say("*zgrzyta*");
                                 else
                                   Say("*skomle*");
                                 endif
                               endif
                             endif

      EVID_DOUBLECLICKED:    if(OpenMyPack(ev))
                               EndRestMode();
                               ev := 0;
                               return 1;
                             endif

      EVID_ITEM_GIVEN:       EndRestMode();
                             TakeItem(ev);
                             ev := 0;
                             return 1;

      EVID_ALL_FOLLOW_CMD:   EndRestMode();
                             SetFollowing(ev.source);
                             ev := 0;
                             return 1;

      EVID_ALL_GUARD_CMD:    EndRestMode();
                             guarding  := ev.source;
                             ev := 0;
                             return 1;

      EVID_ALL_TRANSFER_CMD: EndRestMode();
                             TransferTo(ev.source);
                             ev := 0;
                             return 1;

      EVID_MOUNT:            EndRestMode();
                             SetObjProperty(me, PROP_MOUNTING, ReadGameClock());
                             MountSleep();
                             ev := 0;
                             return 1;

      EVID_RUN:              EndRestMode();
                             if(ev.others == "priormax")
                               FollowEnd();
                               waittime  := DEF_WAITTIME;
                               NpcMoveTo(ev, NMT_RUN);
                               return 1;
                             endif

      EVID_WALK:             EndRestMode();
                             if(ev.others == "priormax")
                               FollowEnd();
                               waittime  := DEF_WAITTIME;
                               NpcMoveTo(ev, NMT_WALK);
                               return 1;
                             endif

      EVID_CORPSE_LOOT:      EndRestMode();
                             CheckMasterLoot();
                             ev := 0;
                             return 1;
    endcase

  else

    case(ev.type)
      EVID_MASTER_DEAD:      EndRestMode();
                             CheckMasterDeath();
                             ev := 0;
                             return 1;

      EVID_CORPSE_LOOT:      EndRestMode();
                             CheckMasterLoot();
                             ev := 0;
                             return 1;
    endcase

  endif

  case(ev.type)
    EVID_SETSPECABS:         _SetSpecialRawAbilitiesFromEvent(ev);
                             ev := 0;
                             return 1;
  endcase

  ev := 0;
  return 0;

endfunction

//-----------------------------------------------------------------------------

function CanHandleEvent(byref ev)

  if(!ev.source.dead)
    case(ev.type)
      EVID_SPEECH:
      EVID_ALL_ATTACK_CMD:
      EVID_ENGAGED:
      EVID_DAMAGED:
      EVID_DOUBLECLICKED:
      EVID_ITEM_GIVEN:
      EVID_ALL_FOLLOW_CMD:
      EVID_ALL_GUARD_CMD:
      EVID_ALL_TRANSFER_CMD:
      EVID_MOUNT:
      EVID_RUN:
      EVID_WALK:
      EVID_SETSPECABS:
      EVID_CORPSE_LOOT:                return 1;
    endcase
  else
    case(ev.type)
      EVID_SETSPECABS:
      EVID_MASTER_DEAD:
      EVID_CORPSE_LOOT:                return 1;
    endcase
  endif

  return 0;

endfunction

//-----------------------------------------------------------------------------

function ProcessFightSpeech(who,text)

  if(who != _MeMaster)
    return 0;
  endif

  if(text["chodzcie"] or text[lower(me.name) + " chodz"] or text["za mna"] or text["chodzmy"])
    SetFollowing(_MeMaster);
    EndFight();
  elseif((text[lower(me.name) + " podejdz"]) or (text["podejdzcie"]))
    EndFight();
    EndGuardCorpse();
    SetBitOff(MyFlags, MF_PATH_GAIN);
    var chaseloop := 0;
    while(chaseloop <= 25)
      if(CloseDistance(who))
        break;
      endif
      chaseloop := chaseloop + 1;
    endwhile
  elseif(text["stop"] or text[lower(me.name) + " zatrzymaj sie"])
    guarding  := 0;
    MasterCorpse := 0; // w tym momencie mobek moze zresetowac zwloki mastera, jak sam mu kaze.

    if(following)
      FollowEnd();
    elseif(guarding)
      waittime  := DEF_WAITTIME;
    else
      EndFight();
    endif
  elseif(text["broncie mnie"] or text[lower(me.name) + " bron mnie"] or text["chroncie mnie"] or text[lower(me.name) + " chron mnie"])
    if(!CanCommandTamed(me.npctemplate, who) and !IsSummoned(me))
      Say("*nie rozumie*");
    else
      guarding  := who;
    endif
  else
    return HandleSpecAblSpeech(text);
  endif

  EndRestMode();
  return 1;

endfunction

//-----------------------------------------------------------------------------

function ProcessSpeech(who,text)

  if(who != _MeMaster)
    return;
  endif

  if(ProcessFightSpeech(who,text))
    return;
  endif

  if(text["wylacz"] and Mechanic)
    TurnOff();
    return;
  elseif(text["idzcie za"] or text[lower(me.name) + " idz za"])
    var NewFollow := ObjTarget(who);
    if(!NewFollow)
      return;
    elseif(!StandardMobCheck(who,NewFollow, NEW_DIST_CHECK | NO_BUSY_CHECK | NO_COMBAT_CHECK | NO_USE_CHECK, 10))
      return;
    endif
    SetFollowing(NewFollow);
    if(text["idzcie za"])
      AllCommand(EVID_ALL_FOLLOW_CMD,following);
    endif
  elseif(text[lower(me.name) + " bron"] or text[lower(me.name) + " chron"])
    if(!CanCommandTamed(me.npctemplate, who) and !IsSummoned(me))
      Say("*nie rozumie*");
    else
      var NewGuard := ObjTarget(who);
      if(!StandardMobCheck(who,NewGuard,NEW_DIST_CHECK | NO_BUSY_CHECK | NO_COMBAT_CHECK | NO_USE_CHECK, 10))
        return;
      endif
      guarding := NewGuard;
    endif
  elseif(text["broncie"] or text["chroncie"])
    if(!CanCommandTamed(me.npctemplate, who) and !IsSummoned(me))
      Say("*nie rozumie*");
    else
      var NewGuard := ObjTarget(who);
      if(!NewGuard)
        return;
      elseif(!StandardMobCheck(who,NewGuard,NEW_DIST_CHECK | NO_BUSY_CHECK | NO_COMBAT_CHECK | NO_USE_CHECK, 10))
        return;
      endif
      AllCommand(EVID_ALL_GUARD_CMD,NewGuard);
    endif
  elseif(text["uwalniam was"] or text[lower(me.name) + " uwalniam cie"] or text["uwalniam wszystkich"])
    if(CheckLineOfSight(_MeMaster, me) and Distance(_MeMaster, me) < 5)
      Release();
    endif
  elseif(text[lower(me.name) + " zabij"] or text[lower(me.name) + " atakuj"])
    if(!CanCommandTamed(me.npctemplate, who) and !IsSummoned(me))
      Say("*nie rozumie*");
    else
      var NewOpp := ObjTarget(who, TGTOPT_CHECK_LOS + TGTOPT_HARMFUL);
      if(!StandardMobCheck(who,NewOpp,NEW_DIST_CHECK | NO_BUSY_CHECK | NO_COMBAT_CHECK | NO_USE_CHECK, 10))
        return;
      endif

      if(CanAttack(NewOpp))
        Fight(NewOpp);
      endif
    endif
  elseif(text["zabijcie"] or text["atakujcie"])
    if(!CanCommandTamed(me.npctemplate, who) and !IsSummoned(me))
      Say("*nie rozumie*");
    else
      var NewOpp := ObjTarget(who, TGTOPT_CHECK_LOS + TGTOPT_HARMFUL);
      if(!NewOpp)
        return;
      elseif(!StandardMobCheck(who,NewOpp,NEW_DIST_CHECK | NO_BUSY_CHECK | NO_COMBAT_CHECK | NO_USE_CHECK, 10))
        return;
      endif

      if(CanAttack(NewOpp))
        AllCommand(EVID_ALL_ATTACK_CMD,NewOpp);
      endif
    endif
  elseif(text[lower(me.name) + " przekaz"])
    if(IsSummoned(me) or GetNecroControlledTime(me))
      return;
    endif

    var NewMaster := ObjTarget(_MeMaster);
    if(StandardMobCheck(who,NewMaster,NEW_DIST_CHECK | NO_BUSY_CHECK | NO_COMBAT_CHECK | NO_USE_CHECK, 10) and NewMaster != _MeMaster)
      SendSysMessage(NewMaster, _MeMaster.name+" chce Ci przekazac zwierza "+me.name+", zgadzasz sie?", FONT_NORMAL, COLOR_YELLOW);
      if(YesNo(NewMaster, "Na pewno?"))
        TransferTo(NewMaster);
      endif
    endif
  elseif(text["przekaz wszystkich"])
    if(IsSummoned(me) or GetNecroControlledTime(me))
      return;
    endif

    var NewMaster := ObjTarget(_MeMaster);
    if(StandardMobCheck(who,NewMaster,NEW_DIST_CHECK | NO_BUSY_CHECK | NO_COMBAT_CHECK | NO_USE_CHECK, 10) and NewMaster != _MeMaster)
      SendSysMessage(NewMaster, _MeMaster.name+" chce Ci przekazac wszystkie swoje zwierzeta, zgadzasz sie?", FONT_NORMAL, COLOR_YELLOW);
      if(YesNo(NewMaster, "Na pewno?"))
        AllCommand(EVID_ALL_TRANSFER_CMD,NewMaster);
      endif
    endif
  elseif(text[lower(me.name) + " zaloz juke"])
    PutOnJuka();
  elseif(text[lower(me.name) + " zdejmij juke"])
    PutOffJuka();
  elseif(text[lower(me.name) + " odpocznij przy korycie"])
    FenceStay();
    waittime := DEF_WAITTIME;
  elseif(text[lower(me.name) + " wyrzuc przedmioty"])
    DropItems();
  elseif(text[lower(me.name) + " odpocznij"] or text["odpocznijcie"])
    SetRestMode();
    return 1;
  elseif(text[lower(me.name) + " nie strzez zwlok"] or text["nie strzezcie zwlok"])
    if(!CanCommandTamed(me.npctemplate, who) or IsSummoned(me) or GetNecroControlledTime(me))
      Say("*nie rozumie*");
    elseif(IsSetFlag(me, NPCF_TAMED_CGUARD))
      UnSetFlag(me, NPCF_TAMED_CGUARD);
      Say("*"+me.name+" nie bedzie juz strzec zwlok*");
      if(EndGuardCorpse())
        waittime := DEF_WAITTIME;
      endif
    else
      Say("*nie strzeze*");
    endif
  elseif(text[lower(me.name) + " strzez zwloki"] or text["strzezcie zwloki"])
    if(!CanCommandTamed(me.npctemplate, who) or IsSummoned(me) or GetNecroControlledTime(me) or (GetBaseSkill(_MeMaster, MasterAblSkID) < MIN_TAME_SK_TO_GD))
      Say("*nie rozumie*");
    elseif(!IsSetFlag(me, NPCF_TAMED_CGUARD))
        SetFlag(me, NPCF_TAMED_CGUARD);
        Say("*"+me.name+" bedzie strzec zwloki*");
    else
      Say("*strzeze*");
    endif
  else
    return 0;
  endif

  EndRestMode();
  return 1;

endfunction

//-----------------------------------------------------------------------------

function CanAttack(NewOpp)

  if(IsPlayer(_MeMaster) and CanMod(NewOpp, MOD_CHARM_ANIMAL) == 0)
    if(GetModAmount(NewOpp, MOD_CHARM_ANIMAL) > RandomInt(100))
      Say("*odmawia*");
      return 0;
    endif
  elseif(!CanVsAttack(me, NewOpp))
    return 0;
  endif

  return 1;

endfunction

//-----------------------------------------------------------------------------

function HandleSpecAblSpeech(text)

  if(text[me.name + " znajdz sciezke"] or text["znajdzcie sciezke"])
    if(CanDoSpecAbl())
      var pathTarg := __ifelse(opponent, opponent, following);
      if(!pathTarg)
        if(CanSayText())
          Say("*nie potrzebuje*");
        endif
      elseif(!CheckLineOfSight(me, pathTarg))
        if(Abilities[NPC_ABLID_PATHFIND] + (GetEffectiveSkill(_MeMaster, MasterAblSkID)*3) > RandomInt(1000))
          Say("*probuje znalezc sciezke*");
          SmartRunOpenDoorsChance(CInt(Abilities[NPC_ABLID_PATHFIND]/10));
          SetBitOn(MyFlags, MF_SMARTRUN);
          SetObjProperty(me, "#SpecAblDelay", ReadGameClock() + 7);
        elseif(CanSayText())
          Say("*nie potrafi*");
        endif
      elseif(Distance(me, pathTarg) > 1)
        if(CanSayText())
          Say("*widzi cel*");
        endif
      endif
    endif
  elseif(text[me.name + " ulecz sie"] or text["uleczcie sie"])
    if(CanDoSpecAbl())
      if(!spells.size())
        if(CanSayText())
          Say("*nie potrafi*");
        endif
      elseif(!opponent)
        if(CanSayText())
          Say("*nie walczy*");
        endif
      elseif(GetHp(me) > GetMaxHp(me) / 2)
        if(CanSayText())
          Say("*nie czuje potrzeby leczenia sie*");
        endif
      elseif(Abilities[NPC_ABLID_HEALING] + (GetEffectiveSkill(_MeMaster, MasterAblSkID)*2) > RandomInt(1000))
        Say("*probuje sie uleczyc*");
        SetObjProperty(me, "#SpecAblDelay", ReadGameClock() + 10);
        SetBitOn(MyFlags, MF_HEALING);
      elseif(CanSayText())
        Say("*nie umie*");
      endif
    endif
  else
    return 0;
  endif

  EndRestMode();
  return 1;

endfunction

//-----------------------------------------------------------------------------

function CanSayText()

  if(LastTextTime < ReadGameClock() and RandomInt(100) < 50)
    LastTextTime := ReadGameClock() + 10 + RandomInt(15);
    return 1;
  endif

  return 0;

endfunction

//-----------------------------------------------------------------------------

function CanDoSpecAbl()

  if(GetNecroControlledTime(me) or IsSummoned(me))
    return 0;
  endif

  if(GetBaseSkill(_MeMaster, MasterAblSkID) < NPC_ABL_MIN_MASTER_TAM)
    Say("*nie rozumie*");
    return 0;
  elseif(CInt(GetObjProperty(me, "#SpecAblDelay")) > ReadGameClock())
    return 0;
  endif

  return 1;

endfunction

//-----------------------------------------------------------------------------

function Follow()

  if(!following or following.dead or following.concealed or following.hidden)
    FollowEnd();
    return 0;
  endif

  if(IsInBuilding(me.x,me.y,me.realm))
    StepBackward(me);
    FollowEnd();
    guarding  := 0;
    return 0;
  endif

  if(following == me)
    FollowEnd();
    return 0;
  endif

  if(IsPlayer(following))
    if(!IsLoggedIn(following))
      FollowEnd();
      return 0;
    endif
  endif

  if(following != _MeMaster)
    if(CInt(GetObjProperty(following,"#Followed")) != me.serial)
      if(CInt(GetObjProperty(following,"#Followed")))
        var Followed := SystemFindObjectBySerial(CInt(GetObjProperty(following,"#Followed")));
        if(Followed)
          if(CInt(GetObjProperty(Followed,"#Following")) == following.serial)
            WalkAwayFrom(following);
            WalkAwayFrom(following);
            FollowEnd();
            return 0;
          endif
        endif
      endif
    endif
    SetObjProperty(following,"#Followed",me.serial);
  endif

  if(Distance(me,following) <= 2)
    waittime := 1;
  elseif(!CheckLineOfSight(me, following) and (MyFlags & MF_SMARTRUN))
    waittime := !SmartRunToward(following);
  elseif(Distance(me,following) <= 5)
    if(!CanMove(GetDirName(GetDirFromObjToObj(me,following))))
      waittime := 1;
    else
      FollowTime := ReadGameClock();
      if(WalkToward(following))
        waittime := 0;
      else
        waittime := 1;
      endif
    endif
  elseif(Distance(me,following) < 20)
    FollowTime := ReadGameClock();
    if(RunToward(following))
      waittime := 0;
    else
      waittime := 1;
    endif
  elseif(Distance(me,following) > 30)
    FollowEnd();
  else
    if(!Mechanic)
      Say("*szuka*");
    endif
    waittime := 2;
    FollowTime := ReadGameClock();
    WalkToward(following);
  endif

  if(waittime)
    if(Distance(me,following) > 2 and GetStamina(me) < 4)
      if(Mechanic)
        Say("*trzeszczy*");
      else
        Say("*sapie*");
      endif
    endif
  endif

  return 1;

endfunction

//-----------------------------------------------------------------------------

function SetFollowing(newFollow)

  following := newFollow;
  InitSmartRunMob(following);
  SmartRunOpenDoorsChance(0);

endfunction

//-----------------------------------------------------------------------------

function FollowEnd()

  EraseObjProperty(me,"#Following");
  waittime  := DEF_WAITTIME;
  following := 0;
  SetBitOff(MyFlags, MF_SMARTRUN);
  SmartRunOpenDoorsChance(0);

endfunction

//-----------------------------------------------------------------------------

function OpenMyPack(ev)

  if(!IsSummoned(me) and ev.source)
    if(Distance(me, ev.source) <= 2 and CheckLineOfSight(ev.source, me) and DistZ(me, ev.source) < 15 and !ev.source.frozen and !ev.source.paralyzed)

      if(TamedNpcHavePack(me) and (ev.source == _MeMaster or IsGm(ev.source)))
        SendOpenSpecialContainer(ev.source, GetNpcBackpack(me));
      elseif(ev.source.hidden)
        return;
      elseif(ev.source == _MeMaster)
        if(CanGetMount(_MeMaster, me))
          DisableMainEvents();
          if(GetMount(_MeMaster, me))
            EndGuardCorpse();
            return 1;
          else
            EnableMainEvents();
          endif
        endif
      endif

      PlayIdleSound();
    elseif(ev.source.frozen or ev.source.paralyzed)
      SendBad(ev.source, "Nie mozesz sie ruszyc!");
    else
      SendBad(ev.source, "Stoisz za daleko!");
    endif
  endif

  return 0;

endfunction

//-----------------------------------------------------------------------------

function Guard()

  if(guarding == me)
    guarding := 0;
    waittime := DEF_WAITTIME;
    return;
  endif

  if(!guarding or guarding.dead or !guarding.isa(POLCLASS_MOBILE))
    guarding := 0;
    waittime := DEF_WAITTIME;
    return;
  elseif(Distance(me,guarding) > 15)
    if(_MeMaster.isa(POLCLASS_NPC) and guarding.isa(POLCLASS_NPC))
      PlayPcStEffect(me.x, me.y, me.z, me.realm, FX_SMOKE, 0, 0x10, 0x10);
      var Loc := FindStandableLocNear(guarding, 2);
      MoveObject(me, Loc.x, Loc.y, Loc.z, Loc.realm, MOVEOBJECT_FORCELOCATION);
    else
      guarding := 0;
      waittime := DEF_WAITTIME;
      return;
    endif
  endif

  if(IsPlayer(guarding))
    if(!IsLoggedIn(guarding))
      guarding := 0;
      waittime := DEF_WAITTIME;
      return;
    endif
  endif

  waittime := 3;

  if(GetObjProperty(me,"NextGuardWatch") <= ReadGameClock())
    SetObjProperty(me,"NextGuardWatch",ReadGameClock() + 20 + RandomInt(15) );
    PrintTextAbove(me,"*ochraniam Cie " + guarding.name + "*");
  endif

  foreach mob in ListHostiles(guarding, 9, 0)
    if(CanAttack(mob))
      Fight(mob);
      waittime := 1;
      return;
    endif
  endforeach

endfunction

//-----------------------------------------------------------------------------

function EndGuardCorpse()

  if(GuardCorpse)
    EraseObjProperty(GuardCorpse, "GuardedBy");
    EraseObjProperty(me, "#GuardWatchDelay");
    GuardCorpse := 0;
    return 1;
  endif

  return 0;

endfunction

//-----------------------------------------------------------------------------

function CorpGuard()

  if(!GuardCorpse or following or guarding)
    if(EndGuardCorpse())
      waittime := DEF_WAITTIME;
    endif
    return;
  endif

  if(!FindNpcBySerial(GetObjProperty(GuardCorpse, "GuardedBy")))
    SetObjProperty(GuardCorpse, "GuardedBy", me.serial);
  endif
  var NearLoc := GetNearestStandingLoc(GuardCorpse.x, GuardCorpse.y, GuardCorpse.z, GuardCorpse.realm, 2);
  if (NearLoc)
    if(CoorDist( me.x, me.y, NearLoc.x, NearLoc.y ) > 1 or DistZ(me.z, NearLoc.z) > 5)
      if(CInt(GetObjProperty(me, "#GuardWatchDelay")) < ReadGameClock())
        if(GetObjProperty(me,"NextGuardWatch") <= ReadGameClock())
          SetObjProperty(me,"NextGuardWatch",ReadGameClock() + 5 + RandomInt(5));
          Say("*szuka zwlok*");
        endif
        var Path := GetPathFromLoc(me.x, me.y, me.z, NearLoc.x, NearLoc.y, NearLoc.z, me.realm);

        if(!Path)
          Path := FindPath(me.x, me.y, me.z, NearLoc.x, NearLoc.y, NearLoc.z, me.realm, FP_IGNORE_DOORS, 20);
        endif

        if(!Path)
          sleep(1);
          Say("*wyczuwa zwloki*");
          sleep(1);
          PlayStationaryEff( me.x, me.y, me.z, FX_SMOKE, 0xa, 0xa, 0, me.realm);
          PlaySoundEffect( me, SFX_SPELL_TELEPORT );
          MoveObject( me, NearLoc.x, NearLoc.y, NearLoc.z);
          PlayStationaryEff( me.x, me.y, me.z, FX_SMOKE, 0xa, 0xa, 0, me.realm);
          waittime    := 3;
          return;
        else
          foreach Coord in Path
            if(!me)
              exit;
            endif

            if(!GuardCorpse)
              GuardCorpse := 0;
              waittime    := DEF_WAITTIME;
              return;
            endif

            if(CoorDist( me.x, me.y, NearLoc.x, NearLoc.y ) < 1)
              break;
            endif

            var C := 3;
            while(CoorDist(me.x, me.y, Coord.x, Coord.y) > 0 and C > 0)
              OpenTamedDoors();
              if(!RunTowardLocation(Coord.x, Coord.y))
               Sleepms(500);
              endif
              C -= 1;
            endwhile
          endforeach

          if(CoorDist( me.x, me.y, NearLoc.x, NearLoc.y ) > 3)
            SetObjProperty(me, "#GuardWatchDelay", ReadGameClock()+20);
          endif

        endif
      endif
    elseif(GetObjProperty(me,"NextGuardWatch") <= ReadGameClock())
      SetObjProperty(me,"NextGuardWatch",ReadGameClock() + 10 + RandomInt(15));
      Say("*chroni zwloki*");
    endif
  else
    Say("*nie moze znalezc zwlok*");
    LogNotice("[Tamed] GuardCorpseWalk: "+me.serial+" Nie znaleziono sciezki x:" + GuardCorpse.x + " y:" + GuardCorpse.y + " z: " + GuardCorpse.z + " r: " +GuardCorpse.realm , LOGF_NO_NEED | LOGF_SCRIPTS);
    EndGuardCorpse();
  endif
  waittime := 3;

endfunction

//-----------------------------------------------------------------------------

function OpenTamedDoors()

  foreach door in ListItemsNearLocation(me.x, me.y, me.z, 1, me.realm)
    if(door.isa(POLCLASS_DOOR))
      var Res := CanOpenDoor(me, door);

      if(Res == DOOR_OPEN_INSIDE)
        if(!CanControlHouse(door, _MeMaster, 1)) // jak nie jest w swoim domu, to otwiera drzwi i sie nie pieprzy!
          start_script(":doors:opendoor", door);
        endif
      elseif(Res == DOOR_OPEN_UNLOCKED or Res == DOOR_OPEN_KEY)
        start_script(":doors:opendoor", door);
      endif
    endif
  endforeach

endfunction

//-----------------------------------------------------------------------------

function Fight(opp := 0)

  if(!opp)
    return;
  elseif(opp == me or opp.hidden or opp.dead)
    return;
  elseif(Distance(opp,me) > 20)
    return;
  elseif(_MeMaster == opp)
    return;
  elseif(IsInvul(opp))
    return;
  elseif(!CanVsAttack(me, opp))
    return;
  endif

  var oldfollowing := following;
  FollowEnd();

  if(_MeMaster.isa(POLCLASS_NPC))
    SendChEvent(_MeMaster, opp, EVID_ENGAGED);
  endif

  ChangeOpponent(opp);

  var loops     := 0;
  var EndrDelay := 0;

  SetBitOff(MyFlags, MF_SMARTRUN);

  if(Abilities[NPC_ABLID_PATHFIND] < 100)
    if(Abilities[NPC_ABLID_PATHFIND] + GetEffectiveSkill(_MeMaster, MasterAblSkID)*2 > RandomInt(1000))
      SetBitOn(MyFlags, MF_SMARTRUN);
    endif
  else
    if(Abilities[NPC_ABLID_PATHFIND] > RandomInt(1000))
      SetBitOn(MyFlags, MF_SMARTRUN);
    endif
  endif

  InitSpecs();
  SetBitOn(MyFlags, MF_PATH_GAIN);

  ev := 0;

  while(opponent != me and opponent and (!opponent.dead and !opponent.hidden and !opponent.concealed) and (Distance(me,opponent) < 15))

    if(!CloseDistance(opponent))
      loops := loops + 1;
      waittime := 0;
      if(IsInBuilding(me.x,me.y,me.realm))
        StepBackward(me);
        FollowEnd();
        guarding  := 0;
        waittime  := DEF_WAITTIME;
        break;
      endif
    else
      waittime := 1;

      if(SpecFlag & NSPECF_KAMIKAZE)
        KamikazeExplode(me, _MeMaster);
      endif

      if(!me.warmode)
        SetOpponent(opponent);
        SetWarMode(1);
      endif
    endif

    if(!ev)
      ev := wait_for_event(waittime);
    endif

    case(ev.type)
      EVID_SPEECH:             ProcessFightSpeech(ev.source,lower(ev.text));

      EVID_ENGAGED:
      EVID_DAMAGED:            if(ev.source)
                                 if(ev.source == opponent)
                                   PlaySoundEffect(me,dmgsound);
                                 else
                                   if(!CheckLineOfSight(me, opponent) or RandomInt(12)==1)
                                     ChangeOpponent(ev.source);
                                   endif
                                 endif
                                 TurnToward(opponent);
                               endif

      EVID_PEACEMADE:          MakePeace(ev.source,ev.others);
      EVID_FLEE:               RunAwayFeared(ev.source);
                               opponent := 0;

      EVID_ALL_ATTACK_CMD:     ChangeOpponent(ev.source);
      EVID_ALL_FOLLOW_CMD:     SetFollowing(ev.source);
      EVID_ALL_GUARD_CMD:      guarding := ev.source;

      EVID_RUN:                if(ev.others == "priormax")
                                 NpcMoveTo(ev, NMT_RUN);
                                 if(ev)
                                   continue;
                                 endif
                               endif

      EVID_WALK:               if(ev.others == "priormax")
                                 NpcMoveTo(ev, NMT_WALK);
                                 if(ev)
                                   continue;
                                 endif
                               endif

      EVID_SETSPECABS:         _SetSpecialRawAbilitiesFromEvent(ev);
      
      EVID_MASTER_DEAD:      EndRestMode();
                             CheckMasterDeath();

      EVID_CORPSE_LOOT:      EndRestMode();
                             CheckMasterLoot();
    endcase

    ev := 0;

    if(!opponent)
      break;
    endif

    if(following or _MeMaster == opponent)
      break;
    endif

    if(spells.size())
      if(LastBreath <= ReadGameClock())
        if(me.murderer or me.criminal or !FindCity(me))
          if((CheckLineOfSight(me, opponent)) and (Distance(me, opponent) <= 15))
            if(RandomInt(4) == 1 and Specs.exists(NSPEC_FLAMEBREATH))
              CastFlameBreath(me,opponent, Specs[NSPEC_FLAMEBREATH][1]);
            elseif(GetMana(me) > 14)
              CastOffensiveSpell(me,opponent);
            endif
          endif
        endif
        LastBreath := ReadGameClock() + (RandomInt(4) + 4);
      endif

      if(LastHealTime < ReadGameClock() and (Abilities[NPC_ABLID_HEALING] > RandomInt(1000) or (MyFlags & MF_HEALING)))

        if((GetHp(me) < (GetMaxHP(me) / 2)) && ((RandomInt(8) >= 4) or (MyFlags & MF_HEALING)))
          if(CastSpell(me, me, GHEAL_SPID) and !IsForceField(opponent))
            GainSpecialAbility(me, NPC_ABLID_HEALING, 128*SPECIAL_GAIN_MULT);
            LastHealTime := ReadGameClock() + 5;
            SetBitOff(MyFlags, MF_HEALING);
          endif
        endif

        if((GetPoisonLevel(me) >= 1) && (RandomInt(8) >= 3))
          if(CastSpell(me, me, CURE_SPID) and !IsForceField(opponent))
            GainSpecialAbility(me, NPC_ABLID_HEALING, 32*SPECIAL_GAIN_MULT);
            LastHealTime := ReadGameClock() + 5;
            SetBitOff(MyFlags, MF_HEALING);
          endif
        endif

        
      endif
    endif

    if(loops > 30)
      if((CInt((GetHp(me) * 100) / GetMaxHp(me)) < GetFleePoint()))
        Flee(opponent);
      endif
    endif

    if((MyFlags & MF_ENDURANCE) and !IsForceField(opponent))
      
      if(EndrDelay < ReadGameClock() and Distance(me, opponent) < 2 and DistZ(me, opponent) < 10 and !IsForceField(opponent))
        GainSpecialAbility(me, NPC_ABLID_ENDURANCE, 96*SPECIAL_GAIN_MULT);
        EndrDelay := ReadGameClock() + 5;
      endif
    endif

  endwhile

  if(!following)
    SetFollowing(oldfollowing);
  endif

  EndFight();

endfunction

//-----------------------------------------------------------------------------

function EndFight()

  if(opponent != 0 or me.warmode)
    SetOpponent(0);
    SetWarMode(0);
    LastFight := ReadGameClock();

    opponent  := 0;
    ev        := 0;
    waittime  := DEF_WAITTIME;
  endif

endfunction

//-----------------------------------------------------------------------------

function ChangeOpponent(Opp)

  SetBitOff(MyFlags, MF_ENDURANCE);

  if(opp)
    if(opp.hidden and Distance(opp, me) < 3)
      opp.hidden := 0;
    endif

    if(opp != opponent)
      InitSmartRunMob(opponent);
      SmartRunOpenDoorsChance(0);
      opponent := Opp;
      SetOpponent(opponent);
      SetWarMode(1);
      TurnToward(opponent);
    endif

    if(IsPlayer(_MeMaster))
      if(GetBaseSkill(_MeMaster, MasterAblSkID) >= NPC_ABL_MIN_MASTER_TAM and !IsPlayer(Opp) and !IsSummoned(Opp) and !IsTamed(Opp))
        SetBitOn(MyFlags, MF_ENDURANCE);
      endif
    endif
  else
    EndFight();
  endif

endfunction

//-----------------------------------------------------------------------------

function CloseDistance(opponent)

  if(GuardCorpse)
    if(Distance(me, GuardCorpse) > 20)
      EndFight();
      return 0;
    endif
  endif

  if(MyFlags & MF_ARCHER)
    if(Distance(me,opponent) > 4 and Distance(me,opponent) < 10)
      SmartRunMobSucceded(opponent);
      TurnToward(opponent);
      return 1;
    elseif(Distance(me, opponent) <= 4)
      if(RunAwayFrom(opponent))
        return 0;
      endif
    endif
  endif

  if(!CheckLineOfSight(me, opponent) and (MyFlags & MF_SMARTRUN))
    if(IsBitOn(MyFlags, MF_PATH_GAIN))
      CheckPathFindGain();
    endif
    return !SmartRunToward(opponent);
  endif

  case (Distance(me, opponent))
    0:
             WalkAwayFrom(opponent);
             return 0;
    1:
             TurnToward(opponent);
             return 1;

    default: if(MyFlags & MF_SMARTRUN)
               CheckPathFindGain();
               return !SmartRunToward(opponent);
             else
               return !RunToward(opponent);
             endif
  endcase

endfunction

//-----------------------------------------------------------------------------

function CheckPathFindGain()

  if(vSmartRun.sRunPath and (MyFlags & MF_SMARTRUN) and !IsForceField(opponent))
    GainSpecialAbility(me, NPC_ABLID_PATHFIND, 40*SPECIAL_GAIN_MULT);
  endif

endfunction

//-----------------------------------------------------------------------------

function Flee(opponent)

  if((me.script == "immobile") || (me.script == "immobilespell"))
    sleep(2);
    return;
  else
    var runs := 0;
    while(opponent and Distance(me, opponent) < 20 and runs < 150 and CheckLineOfSight(me, opponent))
      if(IsInBuilding(me.x,me.y,me.realm))
        StepBackward(me);
        FollowEnd();
        guarding  := 0;
        waittime := DEF_WAITTIME;
        break;
      endif
      ev := wait_for_event(waittime);
      case(WalkAwayFrom(opponent))
        0: waittime := 1;
        1: waittime := 0;
      endcase
      runs := runs + 1;
      case (ev.type)
        EVID_DAMAGED:    if(((ev.source.npctemplate) and (CheckLineOfSight(me, ev.source))) or (Distance(me, ev.source) < Distance(me, opponent)) or (!CheckLineOfSight(me, opponent)) or (!opponent) or (RandomInt(3)==1))
                           ChangeOpponent(ev.source);
                         endif
        EVID_PEACEMADE:  break;
      endcase
    endwhile
    EndFight();
  endif

endfunction

//-----------------------------------------------------------------------------

function TransferTo(NewMaster)

  if(IsSummoned(me) or GetNecroControlledTime(me) or Mechanic)
    return;
  endif

  if(NewMaster)
    if(!IsPlayer(NewMaster) or NewMaster == _MeMaster)
      if(dmgsound)
        PlaySoundEffect(me, dmgsound);
      endif
      Say("*zwierze odmawia posluszenstwa*");
    elseif(CanControlTamed(me.npctemplate,NewMaster))
      Say("*zwierze zaakceptowalo nowego mistrza "+NewMaster.name+"*");
      me.setmaster(NewMaster);
      _MeMaster      := NewMaster;
      EndRestMode();
      following   := 0;
      guarding    := 0;
      EndGuardCorpse();
      SetObjProperty(me.backpack, PROP_OWNER, _MeMaster.serial);
      SetObjProperty(me, PROP_MASTER, _MeMaster.serial);
    else
      Say("*zwierze odmawia posluszenstwa*");
    endif
  endif

endfunction

//-----------------------------------------------------------------------------

function TakeItem(ev)

  if(IsSummoned(me) or GetNecroControlledTime(me))
    MoveToPack(ev.item,ev.source);
    return;
  endif

  if(CStr(ev.item.objtype) in FoodArray)
    if(GetHappiness(me) >= MAX_HAPPY_LVL)
      MoveToPack(ev.item,ev.source);
      if(Mechanic)
        Say("*pelny*");
      else
        Say("*szczesliwe*");
      endif
      return;
    endif

    var hAmt;

    if(ev.item.amount >= 4)
      hAmt := 4;
    else
      hAmt := ev.item.amount;
    endif

    if(GetHappiness(me)+hAmt >= MAX_HAPPY_LVL)
      hAmt := MAX_HAPPY_LVL - GetHappiness(me);
    endif

    if(!SubtractAmount(ev.item,hAmt))
      return;
    endif

    if(ev.item)
      MoveToPack(ev.item,ev.source);
    endif

    PerformAction(me, ANIM_NPC_EAT);

    if(Mechanic)
      PlaySoundEffect(me, 0x22C);
      PrintTextAbovePrivate(me,"*chrup*", _MeMaster);
    else
      PrintTextAbovePrivate(me,"*Yum!*", _MeMaster);
      PlaySoundEffect(me, CInt(0x3b)+ RandomInt(3));
    endif

    if(GetHappiness(me) >= HIGH_HAPPY_LVL)
      if(Mechanic)
        PrintTextAbovePrivate(me,"*prawie pelny*", _MeMaster);
      else
        PrintTextAbovePrivate(me,"*twe zwierze wyglada na szczesliwsze*", _MeMaster);
      endif
    endif

    SetHappiness(me,GetHappiness(me) + hAmt );
    return;
  endif

  if(TamedNpcHavePack(me) and (ev.source == _MeMaster or IsGm(ev.source)))
    var MyPack := GetNpcBackpack(me);

    if(!MoveItemToContainer(ev.item, MyPack))
      say("*zwierze nie moze trzymac tego przedmiotu*");
      MoveToPack(ev.item,ev.source);
      return;
    else
      PlaySoundEffect(me,0x49);
    endif
  else
    MoveToPack(ev.item,ev.source);
  endif

endfunction

//-----------------------------------------------------------------------------

function Release(utType := 2)

  var Res := IsEngaged(me);

  if(Res == 1)
    Say("*zajete*");
    return;
  elseif(Res == error)
    Say("*przerazone*");
    return;
  endif

  if(IsSummoned(me))

    KillSummonedCreature(me, _MeMaster);

  elseif(Mechanic)

    DealDamage(me,GetMaxHp(me) + 2);

  elseif(GetObjProperty(me, PROP_MOUNTING))

    KillNPC(me);

  else

    following := 0;
    guarding  := 0;
    UnTame(me, utType);

  endif

  exit;

endfunction

//-----------------------------------------------------------------------------

function AllCommand(evtype,what)

  foreach mob in ListMobilesNearLocation(_MeMaster.x, _MeMaster.y, _MeMaster.z, 9, _MeMaster.realm)
    if(GetMasterSerial(Mob) == _MeMaster.serial)
      if(evtype == EVID_ALL_ATTACK_CMD or evtype == EVID_ALL_GUARD_CMD)
        if(CanCommandTamed(Mob.npctemplate, _MeMaster) or IsSummoned(Mob))
          SendChEvent(mob, what, evtype);
        endif
      else
        SendChEvent(mob, what, evtype);
      endif
    endif
  endforeach

endfunction

//-----------------------------------------------------------------------------

function CheckRestriction()

  if(_MeMaster.isa(POLCLASS_NPC))
    return 0;
  endif

  if(chkRestrClock <= ReadGameClock())

    var mountNpcTemp := GetMountNpcTemplateFromMaster(_MeMaster);
    var mountSerial  := GetMountNpcSerialFromMaster(_MeMaster);
    var Envious := 0;
    
    if(IsBitOn(MyFlags, MF_ONLYONE))

       // mimo ze zamountowany npc nie wchodzi w tego loopa - bo ma swoja petle sleepa
       // to moze sie zdarzyc, ze przed wejsciem w mount sleepa odpali ta weryfikacje
       // takze warto sprawdzic serial mounta, czy nie jest biezacego npca.

      if(mountNpcTemp and Distance(me, _MeMaster) <= 12 and GetNpcConfig(mountNpcTemp).OnlyOneTamed)
        if(mountSerial != me.serial)
          Envious := 1;
        endif
      else

        foreach mob in ListMobilesNearLocation(me.x,me.y,me.z,12,me.realm)
          if(GetMasterSerial(mob) == _MeMaster.serial and mob != me)
            if(GetNpcConfig(mob).OnlyOneTamed)
              Envious := 1;
            endif
          endif
        endforeach

      endif

    else

      var NrNum := 0;
      var MaxTamedCount  := CInt(GetNpcConfig(me).MaxTamedCount);

      if(MaxTamedCount <= 0)
        MaxTamedCount := MAX_TAMED;
      endif

      foreach mob in ListMobilesNearLocation(me.x,me.y,me.z,12,me.realm)
        if(GetMasterSerial(mob) == _MeMaster.serial and Mob != me and !IsSummoned(Mob))
          NrNum := NrNum + 1;
        endif
      endforeach

      if(mountNpcTemp and me.serial != mountSerial)
        NrNum := NrNum + 1;
      endif

      if(NrNum >= MaxTamedCount)
        Envious := 1;
      endif

    endif

    if(Envious)
      gEnviousCount += Envious;

      if(gEnviousCount > ENVIOUS_MAX_COUNT)
        Say("*nienawidzi*");
        Release(1);
      else
        if(Modulo(gEnviousCount, 2) == 1)
          Say("*zazdrosny*");
        endif
      endif
    elseif(gEnviousCount > 0)
      gEnviousCount := 0;
      Say("*szczesliwy*");
    endif

    chkRestrClock := ReadGameClock() + ENVIOUS_INTERVAL;
  endif

endfunction

//-----------------------------------------------------------------------------

function PutOnJuka()

  if(me.graphic == CID_BEIGE_HORSE or me.graphic == CID_LLAMA)
    if(GetEffectiveSkill(_MeMaster, SKILLID_TAMING) >= JUKA_MIN_SKVAL)
      SendSysMessage(_MeMaster,"Wybierz juke.",FONT_NORMAL,COLOR_GREEN);
      var Juka := ObjTarget(_MeMaster);
      PutJukaOnAnimal(Juka, me, _MeMaster);
    else
      WalkAwayFrom(_MeMaster);
    endif
  endif

endfunction

//-----------------------------------------------------------------------------

function PutOffJuka()

  if(me.graphic == CID_HORSEPACK or me.graphic == CID_LLAMAPACK)
    if(GetEffectiveSkill(_MeMaster, SKILLID_TAMING) >= 85)
      var MyPack := GetNpcBackpack(me);
      if(len(EnumerateItemsInContainer(MyPack)))
        SendSysMessage(_MeMaster, "Juka nie jest pusta.",FONT_NORMAL,COLOR_RED);
      else
        case(me.graphic)
          CID_HORSEPACK: SetNpcGraphic(me, CID_BEIGE_HORSE);
          CID_LLAMAPACK: SetNpcGraphic(me, CID_LLAMA);
        endcase
        var Juka := CreateItemInPack(_MeMaster, UOBJ_JUKA,1);
        if(!Juka)
          Juka := CreateItemAtLoc(me.x,me.y,me.z,UOBJ_JUKA,1,me.realm);
        endif
      endif
    endif
  endif

endfunction

//-----------------------------------------------------------------------------

function MountSleep()

  var mount := GetEquipmentByLayer(_MeMaster, LAYER_MOUNT);

  if(mount)
    DisableMainEvents();

    if(!IsLoggedIn(_MeMaster))
      MountWaitForLogon();
    endif

    clear_event_queue();

    while(me and GetObjProperty(me, PROP_MOUNTING))

      if(!mount)
        mount := GetEquipmentByLayer(_MeMaster, LAYER_MOUNT);
      endif

      if(CheckHappinessCounter(me, mount))
        DisMount(_MeMaster);
        EraseObjProperty(me, PROP_MOUNTING);
        Release();
        break;
      endif

      ev := wait_for_event(30);

      case(ev.type)
        EVID_MOUNT_LOGOFF:  MountWaitForLogon();
      endcase

      if(!_MeMaster)
        _MeMaster := GetMaster(me);
      endif

      if(!IsLoggedIn(_MeMaster))
        MountWaitForLogon();
      endif

    endwhile

    EnableMainEvents();
  endif

  EraseObjProperty(me, PROP_MOUNTING);

endfunction

//-----------------------------------------------------------------------------

function MountWaitForLogon()

  if(!GetObjProperty(me,"TempHappinessCounter"))
    SetObjProperty(me,"TempHappinessCounter",GetHappinessCounter(Me) - ReadGameClock());
  endif

  var mount := GetEquipmentByLayer(_MeMaster, LAYER_MOUNT);

  while(me and GetObjProperty(me,PROP_MOUNTING))
  
    if(GetObjProperty(me, PROP_MOUNTING) + MOUNT_EXPTIME < ReadGameClock())
      SaveNpcAttrData(me, mount);
      KillNPC(me);
      exit;
    endif

    ev := wait_for_event(30);

    if(!_MeMaster)
      _MeMaster := GetMaster(me);
      mount  := GetEquipmentByLayer(_MeMaster, LAYER_MOUNT);
    endif

    if(ev.type == EVID_MOUNT_LOGON)
      break;
    endif

    if(IsLoggedIn(_MeMaster))
      break;
    endif

  endwhile

  if(GetObjProperty(me,"TempHappinessCounter"))
    SetHappinessCounter(Me,ReadGameClock() + CInt(GetObjProperty(me,"TempHappinessCounter")));
    EraseObjProperty(me,"TempHappinessCounter");
  endif

endfunction

//-----------------------------------------------------------------------------

function FenceStay()

  if(IsSummoned(me) or GetNecroControlledTime(me) or Mechanic)
    return;
  endif

  SendSysMessage(_MeMaster,"Wskaz koryto.",FONT_NORMAL,COLOR_GREEN);
  Trough := ObjTarget(_MeMaster);

  if(!Trough)
    SendSysMessage(_MeMaster,"Anulowano.",FONT_NORMAL,COLOR_RED);
    return;
  elseif(!Trough.isa(POLCLASS_ITEM) or Trough.objtype != UOBJ_TROUGH)
    SendSysMessage(_MeMaster,"To nie koryto.",FONT_NORMAL,COLOR_RED);
    return;
  elseif(GetObjProperty(Trough,"FenceAnimal"))
    var Animal := SystemFindObjectBySerial(CInt(GetObjProperty(Trough,"FenceAnimal")));
    if(Animal)
      if(CInt(GetObjProperty(Animal,"FenceTrough")) == Trough.serial)
        if(Distance(Trough,Animal) <= 1)
          SendSysMessage(_MeMaster,"To koryto jest juz zajete!",FONT_NORMAL,COLOR_RED);
          return;
        endif
      endif
    endif
  elseif(Distance(_MeMaster,Trough) > 3 or !CheckLineOfSight(_MeMaster,Trough))
    SendSysMessage(_MeMaster,"Nie widzisz tego koryta.",FONT_NORMAL,COLOR_RED);
    return;
  endif

  var Gx,Gy;

  if(GetObjProperty(Trough,"Dir") == error)
    SetFenceDir();
  endif

  case(GetObjProperty(Trough,"Dir"))
    DIR_S:   Gx := Trough.x;  Gy := Trough.y-1;
    DIR_N:   Gx := Trough.x;  Gy := Trough.y+1;
    DIR_W:   Gx := Trough.x-1;Gy := Trough.y;
    default: Gx := Trough.x+1;Gy := Trough.y;
  endcase

  var C    := 0;
  waittime := 0;
  while(coordist(me.x,me.y,Gx,Gy) > 0 and C < 100)
    ev := wait_for_event(waittime);
    if(!WalkTowardLocation(Gx,Gy))
      waittime := 1;
    else
      waittime := 0;
    endif
    if(ev)
      if(ev.type == EVID_SPEECH)
        ev.text := lower(ev.text);
        if(ev.text["stop"])
          return;
        endif
      endif
    endif
    C := C + 1;
  endwhile

  if(C < 100 and Distance(me,Trough) <= 1)
    following := 0;
    guarding  := 0;
    EndFight();
    TurnToward(Trough);

    SetObjProperty(Trough,"FenceAnimal",me.serial);
    SetObjProperty(me,"FenceStay",ReadGameClock());
    SetObjProperty(me,"FenceTrough",Trough.serial);
    Say("*odpoczywa*");
  else
    Trough := 0;
    Say("*nie widzi koryta*");
  endif

endfunction

//-----------------------------------------------------------------------------

function CheckFence()

  if(GetObjProperty(me,"FenceStay"))

    if(!Trough)
      Trough := SystemFindObjectBySerial(CInt(GetObjProperty(me,"FenceTrough")));
    endif

    if(!Trough)
      EraseObjProperty(me,"FenceStay");
      EraseObjProperty(me,"FenceTrough");
      return;
    elseif(Distance(me,Trough) > 1)
      EraseObjProperty(me,"FenceStay");
      EraseObjProperty(me,"FenceTrough");
      return;
    elseif(CInt(GetObjProperty(Trough,"FenceAnimal")) != me.serial)
      EraseObjProperty(me,"FenceStay");
      EraseObjProperty(me,"FenceTrough");
      return;
    endif

    if(CInt(GetObjProperty(me,"FenceStay")) + FENCE_EAT_TIME < ReadGameClock())
      if(GetHappiness(me) < MAX_HAPPY_LVL)
        foreach Item in EnumerateItemsInContainer(Trough)
          if(CStr(Item.objtype) in FoodArray)
            if(SubtractAmount(Item,1))
              PerformAction(me, ANIM_NPC_EAT);
              PlaySoundEffect(me, CInt(0x3b)+RandomInt(3));
              Say("*Yum!*");
              TurnToward(Trough);
              SetHappiness(me,GetHappiness(me) + 1);
              SetObjProperty(me,"FenceStay",ReadGameClock());
              return;
            endif
          endif
        endforeach
      endif
      SetObjProperty(me,"FenceStay",ReadGameClock() - FENCE_EAT_TIME + 120);
    endif

  endif

endfunction

//-----------------------------------------------------------------------------

function SetFenceDir()

  foreach Item in ListItemsAtLocation(Trough.x,Trough.y-1,Trough.z,Trough.realm)
    if(Item.objtype == 2144)
      SetObjProperty(Trough,"Dir",DIR_N);
      return;
    endif
  endforeach

  foreach Item in ListItemsAtLocation(Trough.x,Trough.y+1,Trough.z,Trough.realm)
    if(Item.objtype == 2144)
      SetObjProperty(Trough,"Dir",DIR_S);
      return;
    endif
  endforeach

  foreach Item in ListItemsAtLocation(Trough.x+1,Trough.y,Trough.z,Trough.realm)
    if(Item.objtype == 2145)
      SetObjProperty(Trough,"Dir",DIR_W);
      return;
    endif
  endforeach

  foreach Item in ListItemsAtLocation(Trough.x-1,Trough.y,Trough.z,Trough.realm)
    if(Item.objtype == 2145)
      SetObjProperty(Trough,"Dir",DIR_E);
      return;
    endif
  endforeach

endfunction

//-----------------------------------------------------------------------------

function TurnOff()
  
  if(Distance(me, _MeMaster) > 2)
    return;
  endif 
  
  if (me.backpack.item_count > 1 )
    SendSysMessage(_MeMaster,"Nie mozesz wylaczyc golema dopoki ma niepusty plecak.",FONT_NORMAL,COLOR_RED);
    return;
  else
    var GolemBox := CreateItemInPack(_MeMaster, 0xA002);
    if(GolemBox)
      SetName(GolemBox, me.name);
      SetToolTipProp(GolemBox, "Wlasciciel" + ggm(_MeMaster,4), GetRealName(_MeMaster));
      SaveNpcAttrData(me, GolemBox);
      KillNPC(me);
    endif
  endif
endfunction

//-----------------------------------------------------------------------------

function StepBackward(me)

  var Mods := GetDirLocMods(GetReverseDir(me.facing));

  RunTowardLocation(me.x+Mods[1]*2,me.y+Mods[2]*2);
  RunTowardLocation(me.x+Mods[1]*2,me.y+Mods[2]*2);
  RunTowardLocation(me.x+Mods[1]*2,me.y+Mods[2]*2);

endfunction

//-----------------------------------------------------------------------------

function TamedRunLikeHell(opponent)

  if(IsWalking())
    SetWalkPause();
  endif

  while((opponent) and not(opponent.dead or opponent.hidden or opponent.concealed) and (Distance(me,opponent) < 18))
    if(IsInBuilding(me.x,me.y,me.realm))
      StepBackward(me);
      FollowEnd();
      guarding  := 0;
      waittime := DEF_WAITTIME;
      break;
    endif

    if(RunAwayFrom(opponent))
      ev := wait_for_event(0);
    else
      ev := wait_for_event(1);
    endif
    case(ev.type)
      EVID_SPEECH:      if(ev.source == _MeMaster)
                          if(lower(ev.text)["stop"])
                            waittime := DEF_WAITTIME;
                            return;
                          endif
                        endif
      EVID_DAMAGED:     if(RandomInt(3)==1)
                          Fight(ev.source);
                          return;
                        endif
    endcase
  endwhile
endfunction

//-----------------------------------------------------------------------------

function EnableMainEvents()
  DisableEvents(EVID_DISENGAGED + EVID_OPPONENT_MOVED + EVID_LEFTAREA + EVID_ENTEREDAREA);

  EnableEvents(EVID_SPEECH, T_SPEECH_RANGE);
  EnableEvents(EVID_DOUBLECLICKED);
  EnableEvents(EVID_ITEM_GIVEN);
  EnableEvents(EVID_PEACEMADE + EVID_FLEE);
  EnableEvents(EVID_ENGAGED + EVID_DAMAGED);
  EnableEvents(EVID_FLEE);
endfunction

//-----------------------------------------------------------------------------

function DisableMainEvents()
  DisableEvents(EVID_DISENGAGED + EVID_OPPONENT_MOVED);

  DisableEvents(EVID_SPEECH);
  DisableEvents(EVID_DOUBLECLICKED);
  DisableEvents(EVID_ITEM_GIVEN);
  DisableEvents(EVID_PEACEMADE + EVID_FLEE);
  DisableEvents(EVID_ENGAGED + EVID_DAMAGED);
  DisableEvents(EVID_FLEE);
endfunction

//-----------------------------------------------------------------------------

function CheckMasterDeath()

  if(IsSetFlag(me, NPCF_TAMED_CGUARD))
    if(ev.source == _MeMaster and ev.corpse and ev.source)
      Say("*smutny*");
      MasterCorpse := ev.corpse;
      GuardCorpse := ev.corpse;
      SetObjProperty(GuardCorpse, "GuardedBy", me.serial);
      EraseObjProperty(me, "#GuardWatchDelay");
      following   := 0;
      guarding    := 0;
    endif
  endif

endfunction

//-----------------------------------------------------------------------------

function CheckMasterLoot()

  if(GuardCorpse and ev.source and ev.corpse)
    if(ev.corpse == GuardCorpse)
      if(ev.source != _MeMaster)
        var Source := ev.source;
        ev := 0; // kurwa, trzeba czyscic bo inaczej wpadnie w petle - Fight spieprzy sie
        UnHide(Source);
        Fight(Source);
      endif
    endif
  endif

endfunction

//-----------------------------------------------------------------------------

function SetRestMode()

  if(!opponent and !Mechanic and LastFight+15 < ReadGameClock() and LastRest+5 < ReadGameClock())
    LastRest := ReadGameClock();
    if(GetHappiness(me) <= MIDDLE_HAPPY_LVL)
      Say("*glodne*");
    elseif(GetStamina(me) == GetMaxStamina(me) and GetHp(me) == GetMaxHp(me) and GetMana(me) == GetMaxMana(me))
      Say("*wypoczete*");
    else
      SetBitOn(MyFlags, MF_RESTMODE);
      FollowEnd();
      guarding  := 0;
      Say("*odpoczywa*");
      waittime  := REST_WAITTIME;
    endif
  else
    Say("*roztrzesione*");
  endif

endfunction

//-----------------------------------------------------------------------------

function CheckRestMode()

  if(following or guarding)
    EndRestMode();
  elseif(MyFlags & MF_RESTMODE and LastRest < ReadGameClock())
    if(MeHaveFlag("CanLieDown"))
      PerformAction(me, ANIM_NPC_LIEDOWN);
    endif

    if(RestTime < ReadGameClock())
      HealStamina(me, RestHealAmt, me);
      HealMana(me, RestHealAmt, me);
      HealMobile(me, RestHealAmt, me);
      SetHappinessCounter(me,GetHappinessCounter(me) - (RestHealAmt*2));
      RestTime := ReadGameClock() + REST_WAITTIME;
    endif

    if(GetStamina(me) == GetMaxStamina(me) and GetHp(me) == GetMaxHp(me) and GetMana(me) == GetMaxMana(me))
      Say("*wypoczete*");
      EndRestMode();
    endif
  endif

endfunction

//-----------------------------------------------------------------------------

function EndRestMode()

  if(MyFlags & MF_RESTMODE)
    if(waittime == REST_WAITTIME)
      waittime := DEF_WAITTIME;
    endif
    SetBitOff(MyFlags, MF_RESTMODE);
  endif

endfunction

//-----------------------------------------------------------------------------

function DropItems()

  var Done := 0;

  foreach Item in ListRootItemsInContainer(me.backpack)
    if(Item.objtype != UOBJ_MOUNT)
      if(!MoveObject(Item, me.x, me.y, me.z, me.realm))
        Say("*nie wie gdzie*");
        return;
      endif

      Done := Done + 1;
    endif
  endforeach

  if(!Done)
    Say("*pusto*");
  else
    Say("*wyrzuca*");
  endif

endfunction

//-----------------------------------------------------------------------------

function CheckBreed()

  if(BreedPartner and BreedDelay)
    if((ReadGameClock() - GetObjProperty(me, PROP_CREATEDAT)) > BREED_MATURE_TIME)

      if(BreedTime)

        if(BreedTime < 0)
          if(Abs(BreedTime) < ReadGameClock())
            BreedTime := 0;
          endif
        elseif(BreedTime < ReadGameClock())
          CreateNewBreed();
        endif

      elseif(RandomInt(1000) < BREED_CHANCE)

        if(BreedSkill <= GetBaseSkill(_MeMaster, SKILLID_FARMING))
          foreach Npc in ListMobilesInLineOfSight(me, 2)
            if(Npc.isa(POLCLASS_NPC) and Npc != me)
              if(IsTamed(Npc))
                if((ReadGameClock() - GetObjProperty(Npc, PROP_CREATEDAT)) > BREED_MATURE_TIME)
                  if(Npc.npctemplate == BreedPartner)
                    Say("*kopuluje*");
                    BreedTime := ReadGameClock() + BreedDelay + RandomInt(CInt(BreedDelay / 3));
                    SetObjProperty(me, "BreedTime", BreedTime);
                  endif
                endif
              endif
            endif
          endforeach
        endif

      endif

    endif
  endif

endfunction

//-----------------------------------------------------------------------------

function CreateNewBreed()

  var newTemp;

  if(RandomInt(2) == 1)
    newTemp := me.npctemplate;
  else
    newTemp := BreedPartner;
  endif

  var newNpc;
  var x := me.x;
  var y := me.y;
  var mx := -1;
  var my := -1;
  var Stand;

  Say("*rodzi*");

  Sleep(5);

  while(!newNpc and my <= 1)
    mx := -1;
    while(!newNpc and mx <= 1)
      Stand  := GetStand(x+mx, y+my, me.realm, me.z);
      newNpc := CreateNpc(newTemp, x+mx, y+my, Stand.z, me.realm);
      mx := mx + 1;
    endwhile
    my := my + 1;
  endwhile

  if(newNpc)
    BreedTime := 0 - (ReadGameClock() + NEW_BREED_DELAY);
    EraseObjProperty(me, "BreedTime");
    SetObjProperty(newNpc, "Breeder", _MeMaster.serial);
  else
    BreedTime := BreedTime + 600;
    SetObjProperty(newNpc, "BreedTime", BreedTime);
  endif

endfunction

//-----------------------------------------------------------------------------

function _SetSpecialRawAbilitiesFromEvent(byref Ev)

  if(Ev.AblId)

    RawAbilities[ev.AblId] := ev.RawVal;
    Abilities[ev.AblId] := RawToBaseSkill(RawAbilities[ev.AblId]);
    __SetSpecialRawAbilities(me, RawAbilities);

  elseif(Ev.RawAbilits and Ev.RawAbilits.size())

    RawAbilities := Ev.RawAbilits;
    __SetSpecialRawAbilities(me, RawAbilities);
    Abilities := GetSpecialAbilities(me);

  endif

endfunction

//-----------------------------------------------------------------------------
